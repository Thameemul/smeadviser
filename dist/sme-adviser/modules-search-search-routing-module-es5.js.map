{"version":3,"sources":["webpack:///src/modules/search/components/search/search.component.html","webpack:///src/modules/search/containers/searchresults/searchresults.component.html","webpack:///src/modules/search/components/index.ts","webpack:///src/modules/search/components/search/search.component.scss","webpack:///src/modules/search/components/search/search.component.ts","webpack:///src/modules/search/containers/index.ts","webpack:///src/modules/search/containers/searchresults/searchresults.component.scss","webpack:///src/modules/search/containers/searchresults/searchresults.component.ts","webpack:///src/modules/search/search-routing.module.ts","webpack:///src/modules/search/search.module.ts","webpack:///src/modules/search/services/index.ts","webpack:///src/modules/search/services/search.service.ts"],"names":["components","SearchComponent","searchService","searchWord","queries","getSearchResults","selector","changeDetection","OnPush","template","containers","SearchResultsComponent","ROUTES","path","canActivate","component","data","title","breadcrumbs","icon","text","link","active","SearchRoutingModule","imports","forChild","exports","SearchModule","initializeApp","firebaseConfig","providers","declarations","services","SearchService","o","observer","t","collection","where","get","then","querySnapshot","forEach","doc","push","next"],"mappings":"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","file":"modules-search-search-routing-module-es5.js","sourcesContent":["export default \"<div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"card shadow-lg border-0 rounded-lg mt-2\\\">\\n            <div class=\\\"card-header\\\">\\n                <h3 class=\\\"text-center font-weight-dark my-1\\\">Search Results</h3>\\n                <!-- <h6 class=\\\"text-center font-weight-dark my-1\\\">Below you will see everything we could locate for your search of <h5>\\\"{{searchWord}}\\\"</h5></h6> -->\\n                <h6 class=\\\"text-center\\\">Below you will see everything we could locate for your search word\\\"</h6>\\n            </div>\\n\\n            <ngb-accordion #acc=\\\"ngbAccordion\\\">\\n                <ngb-panel *ngFor=\\\"let query of queries | async; let indexOfElement = index;\\\">\\n                    <ng-template ngbPanelHeader>\\n                        <button class=\\\"btn btn-link\\\" ngbPanelToggle>\\n                            <span>&#9733; <b> {{query.title}}</b></span>\\n                        </button>\\n                    </ng-template>\\n\\n                    <ng-template ngbPanelContent>\\n                        <div [innerHTML]=\\\"query.querydesc\\\"></div>\\n                    </ng-template>\\n                </ngb-panel>\\n            </ngb-accordion>\\n            <div class=\\\"d-flex justify-content-between p-2\\\">\\n                <ngb-pagination [collectionSize]=\\\"10\\\" page=\\\"1\\\" [pageSize]=\\\"10\\\"> </ngb-pagination>\\n                <select class=\\\"custom-select\\\" style=\\\"width: auto;\\\" name=\\\"pageSize\\\">\\n                    <option [ngValue]=\\\"10\\\" [selected]=\\\"true\\\">10 items per page</option>\\n                    <option [ngValue]=\\\"30\\\">30 items per page</option>\\n                    <option [ngValue]=\\\"50\\\">50 items per page</option>\\n                </select>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<sb-layout-dashboard>\\n    <sb-dashboard-head [hideBreadcrumbs]=\\\"false\\\"></sb-dashboard-head>\\n    <sb-breadcrumbs *ngIf=\\\"!hideBreadcrumbs\\\"></sb-breadcrumbs>\\n     <sb-search></sb-search>\\n</sb-layout-dashboard>\\n\";","import { SearchComponent } from './search/search.component';\nexport const components = [SearchComponent];\nexport * from './search/search.component';\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9zZWFyY2gvY29tcG9uZW50cy9zZWFyY2gvc2VhcmNoLmNvbXBvbmVudC5zY3NzIn0= */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Query } from '../../../addnewquery/models/query.model';\nimport { SearchService } from '../../services/search.service';\n@Component({\n    selector: 'sb-search',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './search.component.html',\n    styleUrls: ['search.component.scss'],\n})\nexport class SearchComponent implements OnInit {\n    searchWord = 'credit card';\n\n    constructor(private searchService: SearchService) {}\n\n    queries!: Observable<Query[]>;\n\n    ngOnInit() {\n        this.queries = this.searchService.getSearchResults();\n    }\n}\n","import { SearchResultsComponent } from './searchresults/searchresults.component';\n\nexport const containers = [SearchResultsComponent];\n\nexport * from './searchresults/searchresults.component';\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9zZWFyY2gvY29udGFpbmVycy9zZWFyY2hyZXN1bHRzL3NlYXJjaHJlc3VsdHMuY29tcG9uZW50LnNjc3MifQ== */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'sb-searchresults',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './searchresults.component.html',\n    styleUrls: ['searchresults.component.scss'],\n})\nexport class SearchResultsComponent implements OnInit {\n    constructor() {}\n    ngOnInit() {}\n}\n","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/* Module */\nimport { SearchModule } from './search.module';\n\n/* Containers */\nimport * as searchContainers from './containers';\n\n/* Guards */\n\nimport { SBRouteData } from '@modules/navigation/models';\n\n/* Routes */\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        canActivate: [],\n        component: searchContainers.SearchResultsComponent,\n        data: {\n            title: 'Search Results',\n            breadcrumbs: [\n                {\n                    icon: 'book-open',\n                    text: 'search',\n                    link: '/search',\n                },\n                {\n                    text: 'search',\n                    active: true,\n                },\n            ],\n        } as SBRouteData,\n    },\n];\n\n@NgModule({\n    imports: [SearchModule, RouterModule.forChild(ROUTES)],\n    exports: [RouterModule],\n})\nexport class SearchRoutingModule {}\n","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { CommonModule, DecimalPipe } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AngularEditorModule } from '@kolkov/angular-editor';\nimport { NavigationModule } from '@modules/navigation/navigation.module';\n//  Firebase\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\n\n/* Modules */\nimport { AppCommonModule } from '@common/app-common.module';\n\n/* Components */\nimport * as searchComponents from './components';\n\n/* Containers */\nimport * as searchContainers from './containers';\n\n/* Directives */\n// import * as searchDirectives from './directives';\n\n/* Guards */\n\n/* Services */\nimport * as SearchService from './services';\n\nimport { environment } from '../../environments/environment';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        FormsModule,\n        AppCommonModule,\n        AngularEditorModule,\n        NavigationModule,\n        AngularFireModule.initializeApp(environment.firebaseConfig),\n        AngularFirestoreModule, // firestore\n        AngularFireAuthModule, // auth\n        AngularFireStorageModule, // storage\n        FormsModule,\n    ],\n    providers: [DecimalPipe, ...SearchService.services],\n    declarations: [\n        ...searchContainers.containers,\n        ...searchComponents.components,\n        // ...searchDirectives.directives,\n    ],\n    exports: [...searchContainers.containers, ...searchComponents.components],\n})\nexport class SearchModule {}\n","import { SearchService } from './search.service';\nexport const services = [SearchService];\nexport * from './search.service';\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, ChildActivationEnd, Router } from '@angular/router';\nimport * as firebase from 'firebase/app';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { Query } from '../../addnewquery/models/query.model';\n\n@Injectable()\nexport class SearchService {\n    getSearchResults(): Observable<Query[]> {\n        const o = new Observable<Query[]>(observer => {\n            const t = firebase\n                .firestore()\n                .collection('query')\n                .where('category', '<=', 'cal')\n                .get()\n                .then(querySnapshot => {\n                    const queries: Query[] = [];\n                    querySnapshot.forEach(doc => {\n                        // doc.data() is never undefined for query doc snapshots\n                        queries.push(doc.data());\n                        // console.log(doc.id, ' => ', doc.data());\n                    });\n                    observer.next(queries);\n                });\n        });\n        return o;\n    }\n}\n"]}