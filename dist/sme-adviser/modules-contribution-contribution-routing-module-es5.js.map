{"version":3,"sources":["webpack:///src/modules/contribution/components/faq/faq.component.html","webpack:///src/modules/contribution/components/post/post.component.html","webpack:///src/modules/contribution/components/query/query.component.html","webpack:///src/modules/contribution/containers/Postcontri/postcontri.component.html","webpack:///src/modules/contribution/containers/faqcontri/faqcontri.component.html","webpack:///src/modules/contribution/containers/querycontri/querycontri.component.html","webpack:///src/modules/contribution/components/faq/faq.component.scss","webpack:///src/modules/contribution/components/faq/faq.component.ts","webpack:///src/modules/contribution/components/index.ts","webpack:///src/modules/contribution/components/post/post.component.scss","webpack:///src/modules/contribution/components/post/post.component.ts","webpack:///src/modules/contribution/components/query/query.component.scss","webpack:///src/modules/contribution/components/query/query.component.ts","webpack:///src/modules/contribution/containers/Postcontri/postcontri.component.scss","webpack:///src/modules/contribution/containers/Postcontri/postcontri.component.ts","webpack:///src/modules/contribution/containers/faqcontri/faqcontri.component.scss","webpack:///src/modules/contribution/containers/faqcontri/faqcontri.component.ts","webpack:///src/modules/contribution/containers/index.ts","webpack:///src/modules/contribution/containers/querycontri/querycontri.component.scss","webpack:///src/modules/contribution/containers/querycontri/querycontri.component.ts","webpack:///src/modules/contribution/contribution-routing.module.ts","webpack:///src/modules/contribution/contribution.module.ts","webpack:///src/modules/contribution/guards/contribution.guard.ts","webpack:///src/modules/contribution/guards/index.ts","webpack:///src/modules/contribution/services/contribution.service.ts","webpack:///src/modules/contribution/services/index.ts","webpack:///src/modules/contribution/services/user.service.ts"],"names":["FAQComponent","contributionService","faqs","getFAQs","selector","changeDetection","OnPush","template","components","PostComponent","postService","posts","getPosts","post","isFAQ","setFAQstatus","QueryComponent","queryService","queries","getQueries","query","PostContriComponent","FAQContriComponent","containers","QueryContriComponent","ROUTES","path","pathMatch","redirectTo","canActivate","component","data","title","ContributionRoutingModule","imports","forChild","exports","ContributionModule","initializeApp","firebaseConfig","providers","declarations","ContributionGuard","guards","ContributionService","o","observer","t","collection","where","get","then","querySnapshot","forEach","doc","push","console","log","id","next","services","userSubject","UserService","user","firstName","lastName","email","asObservable"],"mappings":"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","file":"modules-contribution-contribution-routing-module-es5.js","sourcesContent":["export default \"<h1>Frequently Asked Questions</h1>\\n<ngb-accordion #acc=\\\"ngbAccordion\\\">\\n    <ngb-panel *ngFor=\\\"let faq of faqs | async; let indexOfElement = index;\\\">\\n        <ng-template ngbPanelHeader>\\n            <button class=\\\"btn btn-link\\\" ngbPanelToggle>\\n                <span>&#9733; <b> {{faq.title}}</b></span>\\n            </button>\\n        </ng-template>\\n\\n        <ng-template ngbPanelContent>\\n            <div [innerHTML]=\\\"faq.postdesc\\\"></div>\\n        </ng-template>\\n    </ngb-panel>\\n</ngb-accordion>\\n<div class=\\\"d-flex justify-content-between p-2\\\">\\n    <ngb-pagination [collectionSize]=\\\"10\\\" page=\\\"1\\\" [pageSize]=\\\"10\\\"> </ngb-pagination>\\n    <select class=\\\"custom-select\\\" style=\\\"width: auto;\\\" name=\\\"pageSize\\\">\\n        <option [ngValue]=\\\"10\\\" [selected]=\\\"true\\\">10 items per page</option>\\n        <option [ngValue]=\\\"30\\\">30 items per page</option>\\n        <option [ngValue]=\\\"50\\\">50 items per page</option>\\n    </select>\\n</div>\";","export default \"<h1>Posts</h1>\\n<ngb-accordion #acc=\\\"ngbAccordion\\\">\\n    <ngb-panel *ngFor=\\\"let post of posts | async; let indexOfElement = index;\\\">\\n        <ng-template ngbPanelHeader>\\n            <button class=\\\"btn btn-link\\\" ngbPanelToggle>\\n                <span>&#9733; <b> {{post.title}}</b></span>\\n            </button>\\n\\n            <button type=\\\"button\\\" (click)=\\\"setAsFAQ(post)\\\" *ngIf=\\\"post.isFAQ == null || !post.isFAQ\\\"\\n                class=\\\"btn btn-sm btn-outline-info float-lg-right\\\"\\n                title=\\\"Add to Frequently Asked Questions\\\">&#43;</button>\\n            <div class=\\\"float-lg-right\\\">\\n                <span class=\\\"float-lg-right\\\" *ngIf=\\\"post.isFAQ != null && post.isFAQ\\\"\\n                    class=\\\"badge badge-secondary\\\">FAQ</span>\\n            </div>\\n        </ng-template>\\n\\n        <ng-template ngbPanelContent>\\n            <div [innerHTML]=\\\"post.postdesc\\\"></div>\\n        </ng-template>\\n    </ngb-panel>\\n</ngb-accordion>\\n<div class=\\\"d-flex justify-content-between p-2\\\">\\n    <ngb-pagination [collectionSize]=\\\"10\\\" page=\\\"1\\\" [pageSize]=\\\"10\\\"> </ngb-pagination>\\n    <select class=\\\"custom-select\\\" style=\\\"width: auto;\\\" name=\\\"pageSize\\\">\\n        <option [ngValue]=\\\"10\\\" [selected]=\\\"true\\\">10 items per page</option>\\n        <option [ngValue]=\\\"30\\\">30 items per page</option>\\n        <option [ngValue]=\\\"50\\\">50 items per page</option>\\n    </select>\\n</div>\";","export default \"<h1>querys</h1>\\n<ngb-accordion #acc=\\\"ngbAccordion\\\">\\n    <ngb-panel *ngFor=\\\"let query of queries | async; let indexOfElement = index;\\\">\\n        <ng-template ngbPanelHeader>\\n            <button class=\\\"btn btn-link\\\" ngbPanelToggle>\\n                <span>&#9733; <b> {{query.title}}</b></span>\\n            </button>\\n\\n            <button type=\\\"button\\\" (click)=\\\"setAsFAQ(query)\\\" *ngIf=\\\"query.isFAQ == null || !query.isFAQ\\\"\\n                class=\\\"btn btn-sm btn-outline-info float-lg-right\\\"\\n                title=\\\"Add to Frequently Asked Questions\\\">&#43;</button>\\n            <div class=\\\"float-lg-right\\\">\\n                <span class=\\\"float-lg-right\\\" *ngIf=\\\"query.isFAQ != null && query.isFAQ\\\"\\n                    class=\\\"badge badge-secondary\\\">FAQ</span>\\n            </div>\\n        </ng-template>\\n\\n        <ng-template ngbPanelContent>\\n            <div [innerHTML]=\\\"query.querydesc\\\"></div>\\n        </ng-template>\\n    </ngb-panel>\\n</ngb-accordion>\\n<div class=\\\"d-flex justify-content-between p-2\\\">\\n    <ngb-pagination [collectionSize]=\\\"10\\\" page=\\\"1\\\" [pageSize]=\\\"10\\\"> </ngb-pagination>\\n    <select class=\\\"custom-select\\\" style=\\\"width: auto;\\\" name=\\\"pageSize\\\">\\n        <option [ngValue]=\\\"10\\\" [selected]=\\\"true\\\">10 items per page</option>\\n        <option [ngValue]=\\\"30\\\">30 items per page</option>\\n        <option [ngValue]=\\\"50\\\">50 items per page</option>\\n    </select>\\n</div>\";","export default \"<sb-layout-dashboard\\n    ><sb-dashboard-head ></sb-dashboard-head>\\n         <div class=\\\"card-body\\\"><sb-post ></sb-post></div>\\n</sb-layout-dashboard>\\n\";","export default \"<sb-layout-dashboard\\n    ><sb-dashboard-head ></sb-dashboard-head>\\n         <div class=\\\"card-body\\\"><sb-faq ></sb-faq></div>\\n</sb-layout-dashboard>\\n\";","export default \"<sb-layout-dashboard\\n    ><sb-dashboard-head ></sb-dashboard-head>\\n         <div class=\\\"card-body\\\"><sb-query ></sb-query></div>\\n</sb-layout-dashboard>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9jb250cmlidXRpb24vY29tcG9uZW50cy9mYXEvZmFxLmNvbXBvbmVudC5zY3NzIn0= */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FAQ } from '@modules/contribution/models/faq.model';\nimport { ContributionService } from '@modules/contribution/services';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'sb-faq',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './faq.component.html',\n    styleUrls: ['faq.component.scss'],\n})\nexport class FAQComponent implements OnInit {\n    constructor(private contributionService: ContributionService) {}\n    faqs!: Observable<FAQ[]>;\n    ngOnInit() {\n        this.faqs = this.contributionService.getFAQs();\n    }\n}7","import { FAQComponent } from './faq/faq.component';\nimport { PostComponent } from './post/post.component';\nimport { QueryComponent } from './query/query.component';\n\nexport const components = [PostComponent, QueryComponent, FAQComponent];\n\nexport * from './post/post.component';\nexport * from './query/query.component';\nexport * from './faq/faq.component';\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9jb250cmlidXRpb24vY29tcG9uZW50cy9wb3N0L3Bvc3QuY29tcG9uZW50LnNjc3MifQ== */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Post } from '@modules/addnewpost/models';\nimport * as firebase from 'firebase/app';\nimport { Observable } from 'rxjs';\n\nimport { PostService } from '../../../addnewpost/services/post.service';\n\n@Component({\n    selector: 'sb-post',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './post.component.html',\n    styleUrls: ['post.component.scss'],\n})\nexport class PostComponent implements OnInit {\n    posts!: Observable<Post[]>;\n\n    constructor(private postService: PostService) {}\n\n    ngOnInit() {\n        this.posts = this.postService.getPosts();\n    }\n\n    setAsFAQ(post: Post) {\n        post.isFAQ = true;\n        this.postService.setFAQstatus(post);\n    }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9jb250cmlidXRpb24vY29tcG9uZW50cy9xdWVyeS9xdWVyeS5jb21wb25lbnQuc2NzcyJ9 */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Query } from '@modules/addnewquery/models';\nimport * as firebase from 'firebase/app';\nimport { Observable } from 'rxjs';\n\nimport { QueryService } from '../../../addnewquery/services/query.service';\n\n@Component({\n    selector: 'sb-query',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './query.component.html',\n    styleUrls: ['query.component.scss'],\n})\nexport class QueryComponent implements OnInit {\n    queries!: Observable<Query[]>;\n\n    constructor(private queryService: QueryService) {}\n\n    ngOnInit() {\n        this.queries = this.queryService.getQueries();\n    }\n\n    setAsFAQ(query: Query) {\n        query.isFAQ = true;\n        this.queryService.setFAQstatus(query);\n    }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9jb250cmlidXRpb24vY29udGFpbmVycy9Qb3N0Y29udHJpL3Bvc3Rjb250cmkuY29tcG9uZW50LnNjc3MifQ== */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n@Component({\n    selector: 'sb-postcontri',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './postcontri.component.html',\n    styleUrls: ['postcontri.component.scss'],\n})\nexport class PostContriComponent implements OnInit {\n    constructor() {}\n    ngOnInit() {}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9jb250cmlidXRpb24vY29udGFpbmVycy9mYXFjb250cmkvZmFxY29udHJpLmNvbXBvbmVudC5zY3NzIn0= */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'sb-faqcontri',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './faqcontri.component.html',\n    styleUrls: ['faqcontri.component.scss'],\n})\nexport class FAQContriComponent implements OnInit {\n    constructor() {}\n    ngOnInit() {}\n}\n","import { FAQContriComponent } from './faqcontri/faqcontri.component';\nimport { PostContriComponent } from './Postcontri/postcontri.component';\nimport { QueryContriComponent } from './querycontri/querycontri.component';\n\nexport const containers = [PostContriComponent, QueryContriComponent, FAQContriComponent];\n\nexport * from './querycontri/querycontri.component';\nexport * from './faqcontri/faqcontri.component';\nexport * from './Postcontri/postcontri.component';\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9jb250cmlidXRpb24vY29udGFpbmVycy9xdWVyeWNvbnRyaS9xdWVyeWNvbnRyaS5jb21wb25lbnQuc2NzcyJ9 */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'sb-querycontri',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './querycontri.component.html',\n    styleUrls: ['querycontri.component.scss'],\n})\nexport class QueryContriComponent implements OnInit {\n    constructor() {}\n    ngOnInit() {}\n}\n","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SBRouteData } from '@modules/navigation/models';\n\n/* Module */\nimport { ContributionModule } from './contribution.module';\n\n/* Containers */\nimport * as contributionContainers from './containers';\n\n/* Guards */\nimport * as contributionGuards from './guards';\n\n/* Routes */\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'post',\n    },\n    {\n        path: 'post',\n        canActivate: [],\n        component: contributionContainers.PostContriComponent,\n        data: {\n            title: 'Post - SME Adviser',\n        } as SBRouteData,\n    },\n    {\n        path: 'query',\n        canActivate: [],\n        component: contributionContainers.QueryContriComponent,\n        data: {\n            title: 'Query - SME Adviser',\n        } as SBRouteData,\n    },\n    {\n        path: 'faq',\n        canActivate: [],\n        component: contributionContainers.FAQContriComponent,\n        data: {\n            title: 'FAQ - SME Adviser',\n        } as SBRouteData,\n    },\n];\n\n@NgModule({\n    imports: [ContributionModule, RouterModule.forChild(ROUTES)],\n    exports: [RouterModule],\n})\nexport class ContributionRoutingModule {}\n","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AngularEditorModule } from '@kolkov/angular-editor';\n\n//  Firebase\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\n\n/* Modules */\nimport { AppCommonModule } from '@common/app-common.module';\nimport { NavigationModule } from '@modules/navigation/navigation.module';\n\n/* Components */\nimport * as contributionComponents from './components';\n\n/* Containers */\nimport * as contributionContainers from './containers';\n\n/* Guards */\nimport * as contributionGuards from './guards';\n\n/* Services */\nimport * as contributionServices from './services';\n\nimport { PostService } from '../addnewpost/services/post.service';\nimport { environment } from '../../environments/environment';\nimport { QueryService } from '../addnewquery/services/query.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        FormsModule,\n        AppCommonModule,\n        NavigationModule,\n        AngularEditorModule,\n        AngularFireModule.initializeApp(environment.firebaseConfig),\n        AngularFirestoreModule, // firestore\n        AngularFireAuthModule, // auth\n        AngularFireStorageModule, // storage\n        FormsModule,\n    ],\n    providers: [\n        ...contributionServices.services,\n        PostService,\n        QueryService,\n        ...contributionGuards.guards,\n    ],\n    declarations: [...contributionContainers.containers, ...contributionComponents.components],\n    exports: [...contributionContainers.containers, ...contributionComponents.components],\n})\nexport class ContributionModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class ContributionGuard implements CanActivate {\n    canActivate(): Observable<boolean> {\n        return of(true);\n    }\n}\n","import { ContributionGuard } from './contribution.guard';\n\nexport const guards = [ContributionGuard];\n\nexport * from './contribution.guard';\n","import { Injectable } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport { Observable, of } from 'rxjs';\n\nimport { FAQ } from '../models/faq.model';\n\n@Injectable()\nexport class ContributionService {\n    constructor() {}\n\n    getAuth$(): Observable<{}> {\n        return of({});\n    }\n    getFAQs(): Observable<FAQ[]> {\n        // const t: AngularFirestoreCollection = this.firestore.collection<Post>('post');\n        // return t.valueChanges();\n        const o = new Observable<FAQ[]>(observer => {\n            const t = firebase\n                .firestore()\n                .collection('post')\n                .where('isFAQ', '==', 1)\n                .get()\n                .then(querySnapshot => {\n                    const faqs: FAQ[] = [];\n                    querySnapshot.forEach(doc => {\n                        // doc.data() is never undefined for query doc snapshots\n                        faqs.push(doc.data());\n                        console.log(doc.id, ' => ', doc.data());\n                    });\n                    observer.next(faqs);\n                });\n        });\n        return o;\n    }\n}","import { ContributionService } from './contribution.service';\nimport { UserService } from './user.service';\n\nexport const services = [ContributionService, UserService];\n\nexport * from './contribution.service';\nexport * from './user.service';\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\n\nimport { User } from '../models';\n\nconst userSubject: ReplaySubject<User> = new ReplaySubject(1);\n\n@Injectable()\nexport class UserService {\n    constructor() {\n        this.user = {\n            id: '123',\n            firstName: 'Start',\n            lastName: 'Bootstrap',\n            email: 'no-reply@startbootstrap.com',\n        };\n    }\n\n    set user(user: User) {\n        userSubject.next(user);\n    }\n\n    get user$(): Observable<User> {\n        return userSubject.asObservable();\n    }\n}\n"]}