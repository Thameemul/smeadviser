{"version":3,"sources":["webpack:///src/modules/contribution/components/faq/faq.component.html","webpack:///src/modules/contribution/components/post/post.component.html","webpack:///src/modules/contribution/components/query/detailquery.component.html","webpack:///src/modules/contribution/components/query/query.component.html","webpack:///src/modules/contribution/containers/Postcontri/postcontri.component.html","webpack:///src/modules/contribution/containers/faqcontri/faqcontri.component.html","webpack:///src/modules/contribution/containers/querycontri/querycontri.component.html","webpack:///src/modules/contribution/components/faq/faq.component.scss","webpack:///src/modules/contribution/components/faq/faq.component.ts","webpack:///src/modules/contribution/components/index.ts","webpack:///src/modules/contribution/components/post/post.component.scss","webpack:///src/modules/contribution/components/post/post.component.ts","webpack:///src/modules/contribution/components/query/detailquery.component.scss","webpack:///src/modules/contribution/components/query/detailquery.component.ts","webpack:///src/modules/contribution/components/query/query.component.scss","webpack:///src/modules/contribution/components/query/query.component.ts","webpack:///src/modules/contribution/containers/Postcontri/postcontri.component.scss","webpack:///src/modules/contribution/containers/Postcontri/postcontri.component.ts","webpack:///src/modules/contribution/containers/faqcontri/faqcontri.component.scss","webpack:///src/modules/contribution/containers/faqcontri/faqcontri.component.ts","webpack:///src/modules/contribution/containers/index.ts","webpack:///src/modules/contribution/containers/querycontri/querycontri.component.scss","webpack:///src/modules/contribution/containers/querycontri/querycontri.component.ts","webpack:///src/modules/contribution/contribution-routing.module.ts","webpack:///src/modules/contribution/contribution.module.ts","webpack:///src/modules/contribution/guards/contribution.guard.ts","webpack:///src/modules/contribution/guards/index.ts","webpack:///src/modules/contribution/services/contribution.service.ts","webpack:///src/modules/contribution/services/index.ts","webpack:///src/modules/contribution/services/user.service.ts"],"names":["FAQComponent","contributionService","faqs","getFAQs","selector","changeDetection","OnPush","template","components","PostComponent","postService","posts","getPosts","post","isFAQ","setFAQstatus","DetailqueryComponent","route","htmlContent","config","editable","spellcheck","height","minHeight","placeholder","translate","defaultParagraphSeparator","defaultFontName","params","subscribe","query","getQuery","docid","replies","getReplies","QueryComponent","queryService","queries","getQueries","PostContriComponent","FAQContriComponent","containers","QueryContriComponent","ROUTES","path","pathMatch","redirectTo","canActivate","component","data","title","children","ContributionRoutingModule","imports","forChild","exports","ContributionModule","initializeApp","firebaseConfig","providers","declarations","ContributionGuard","authService","router","next","state","isLoggedIn","navigate","guards","ContributionService","o","observer","t","collection","where","get","then","querySnapshot","forEach","doc","push","docId","console","log","id","source","_query","services","userSubject","UserService","user","firstName","lastName","email","asObservable"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAaA,YAAY;AACrB,4BAAoBC,mBAApB,EAA8D;AAAA;;AAA1C,aAAAA,mBAAA,GAAAA,mBAAA;AAA4C;;AAD3C;AAAA;AAAA,mCAGV;AACP,eAAKC,IAAL,GAAY,KAAKD,mBAAL,CAAyBE,OAAzB,EAAZ;AACH;AALoB;;AAAA;AAAA,OAAzB;;;;cAC6C;;;;AADhCH,gBAAY,6DANxB,gEAAU;AACPI,cAAQ,EAAE,QADH;AAEPC,qBAAe,EAAE,sEAAwBC,MAFlC;AAGPC,cAAQ,EAAR;AAAA;AAAA,uHAHO;;;;AAAA,KAAV,CAMwB,E,+EACoB,kF,EADpB,GAAZP,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNN,QAAMQ,UAAU,GAAG,CAAC,kEAAD,EAAgB,qEAAhB,EAAgC,+DAAhC,EAA8C,iFAA9C,CAAnB;;;;;;;;;;;;;;;;ACLP;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAaC,aAAa;AAGtB,6BAAoBC,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA4B;;AAH1B;AAAA;AAAA,mCAKX;AACP,eAAKC,KAAL,GAAa,KAAKD,WAAL,CAAiBE,QAAjB,EAAb;AACH;AAPqB;AAAA;AAAA,iCASbC,IATa,EASD;AACjBA,cAAI,CAACC,KAAL,GAAa,IAAb;AACA,eAAKJ,WAAL,CAAiBK,YAAjB,CAA8BF,IAA9B;AACH;AAZqB;;AAAA;AAAA,OAA1B;;;;cAGqC;;;;AAHxBJ,iBAAa,6DANzB,gEAAU;AACPL,cAAQ,EAAE,SADH;AAEPC,qBAAe,EAAE,sEAAwBC,MAFlC;AAGPC,cAAQ,EAAR;AAAA;AAAA,yHAHO;;;;AAAA,KAAV,CAMyB,E,+EAGW,6E,EAHX,GAAbE,aAAa,CAAb;;;;;;;;;;;;;;;;ACbb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAaO,oBAAoB;AAgB7B,oCAAoBf,mBAApB,EAAsEgB,KAAtE,EAA6F;AAAA;;AAAzE,aAAAhB,mBAAA,GAAAA,mBAAA;AAAkD,aAAAgB,KAAA,GAAAA,KAAA;AAftE,aAAAC,WAAA,GAAc,EAAd;AACO,aAAAC,MAAA,GAA8B;AACjCC,kBAAQ,EAAE,IADuB;AAEjCC,oBAAU,EAAE,IAFqB;AAGjCC,gBAAM,EAAE,MAHyB;AAIjCC,mBAAS,EAAE,OAJsB;AAKjCC,qBAAW,EAAE,EALoB;AAMjCC,mBAAS,EAAE,IANsB;AAOjCC,mCAAyB,EAAE,GAPM;AAQjCC,yBAAe,EAAE;AARgB,SAA9B;AAcwF;;AAhBlE;AAAA;AAAA,mCAiBlB;AAAA;;AACP,eAAKV,KAAL,CAAWW,MAAX,CAAkBC,SAAlB,CAA4B,UAAAD,MAAM,EAAI;AAClC,iBAAI,CAACE,KAAL,GAAa,KAAI,CAAC7B,mBAAL,CAAyB8B,QAAzB,CAAkCH,MAAM,CAACI,KAAzC,CAAb;AACA,iBAAI,CAACC,OAAL,GAAe,KAAI,CAAChC,mBAAL,CAAyBiC,UAAzB,CAAoCN,MAAM,CAACI,KAA3C,CAAf;AACH,WAHD;AAIH;AAtB4B;;AAAA;AAAA,OAAjC;;;;cAgB6C;;cAAoC;;;;AAhBpEhB,wBAAoB,6DALhC,gEAAU;AACPZ,cAAQ,EAAE,gBADH;AAEPG,cAAQ,EAAR;AAAA;AAAA,iIAFO;;;;AAAA,KAAV,CAKgC,E,+EAgBY,kF,EAAoC,8D,EAhBhD,GAApBS,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACbb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAamB,cAAc;AAGvB,8BAAoBC,YAApB,EAAgD;AAAA;;AAA5B,aAAAA,YAAA,GAAAA,YAAA;AAA8B;;AAH3B;AAAA;AAAA,mCAKZ;AACP,eAAKC,OAAL,GAAe,KAAKD,YAAL,CAAkBE,UAAlB,EAAf;AACH;AAPsB;AAAA;AAAA,iCASdR,KATc,EASA;AACnBA,eAAK,CAAChB,KAAN,GAAc,IAAd;AACA,eAAKsB,YAAL,CAAkBrB,YAAlB,CAA+Be,KAA/B;AACH;AAZsB;;AAAA;AAAA,OAA3B;;;;cAGsC;;;;AAHzBK,kBAAc,6DAN1B,gEAAU;AACP/B,cAAQ,EAAE,UADH;AAEPC,qBAAe,EAAE,sEAAwBC,MAFlC;AAGPC,cAAQ,EAAR;AAAA;AAAA,2HAHO;;;;AAAA,KAAV,CAM0B,E,+EAGW,gF,EAHX,GAAd4B,cAAc,CAAd;;;;;;;;;;;;;;;;ACbb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAaI,mBAAmB;AAC5B,qCAAc;AAAA;AAAE;;AADY;AAAA;AAAA,mCAEjB,CAAE;AAFe;;AAAA;AAAA,OAAhC;;AAAaA,uBAAmB,6DAN/B,gEAAU;AACPnC,cAAQ,EAAE,eADH;AAEPC,qBAAe,EAAE,sEAAwBC,MAFlC;AAGPC,cAAQ,EAAR;AAAA;AAAA,qIAHO;;;;AAAA,KAAV,CAM+B,E,iFAAA,GAAnBgC,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACPb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQf,QAAaC,kBAAkB;AAC3B,oCAAc;AAAA;AAAE;;AADW;AAAA;AAAA,mCAEhB,CAAE;AAFc;;AAAA;AAAA,OAA/B;;AAAaA,sBAAkB,6DAN9B,gEAAU;AACPpC,cAAQ,EAAE,cADH;AAEPC,qBAAe,EAAE,sEAAwBC,MAFlC;AAGPC,cAAQ,EAAR;AAAA;AAAA,mIAHO;;;;AAAA,KAAV,CAM8B,E,iFAAA,GAAlBiC,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJN,QAAMC,UAAU,GAAG,CAAC,oFAAD,EAAsB,uFAAtB,EAA4C,iFAA5C,CAAnB;;;;;;;;;;;;;;;;ACJP;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQf,QAAaC,oBAAoB;AAC7B,sCAAc;AAAA;AAAE;;AADa;AAAA;AAAA,mCAElB,CAAE;AAFgB;;AAAA;AAAA,OAAjC;;AAAaA,wBAAoB,6DANhC,gEAAU;AACPtC,cAAQ,EAAE,gBADH;AAEPC,qBAAe,EAAE,sEAAwBC,MAFlC;AAGPC,cAAQ,EAAR;AAAA;AAAA,uIAHO;;;;AAAA,KAAV,CAMgC,E,iFAAA,GAApBmC,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRb;;AAKA;;AAGA;;AAGA;;AAEA;;AAGA;;;AACO,QAAMC,MAAM,GAAW,CAC1B;AACIC,UAAI,EAAE,EADV;AAEIC,eAAS,EAAE,MAFf;AAGIC,gBAAU,EAAE;AAHhB,KAD0B,EAM1B;AACIF,UAAI,EAAE,MADV;AAEIG,iBAAW,EAAE,CAAC,yDAAD,CAFjB;AAGIC,eAAS,EAAE,+DAHf;AAIIC,UAAI,EAAE;AACFC,aAAK,EAAE;AADL;AAJV,KAN0B,EAc1B;AACIN,UAAI,EAAE,OADV;AAEIG,iBAAW,EAAE,CAAC,yDAAD,CAFjB;AAGIC,eAAS,EAAE,gEAHf;AAIIG,cAAQ,EAAE,CACN;AACIP,YAAI,EAAE,EADV;AAEII,iBAAS,EAAE;AAFf,OADM,EAKN;AACIJ,YAAI,EAAE,QADV;AAEII,iBAAS,EAAE;AAFf,OALM,CAJd;AAcIC,UAAI,EAAE;AACFC,aAAK,EAAE;AADL;AAdV,KAd0B,EAgC1B;AACIN,UAAI,EAAE,KADV;AAEIG,iBAAW,EAAE,CAAC,yDAAD,CAFjB;AAGIC,eAAS,EAAE,8DAHf;AAIIC,UAAI,EAAE;AACFC,aAAK,EAAE;AADL;AAJV,KAhC0B,CAAvB;;AA8CP,QAAaE,yBAAyB;AAAA;AAAA,KAAtC;;AAAaA,6BAAyB,6DAJrC,+DAAS;AACNC,aAAO,EAAE,CAAC,uEAAD,EAAqB,6DAAaC,QAAb,CAAsBX,MAAtB,CAArB,CADH;AAENY,aAAO,EAAE,CAAC,4DAAD;AAFH,KAAT,CAIqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/Db;AAOA;;AAMA;;AAIA;;AAGA;;AAGA;;AAGA;;;AA+BA,QAAaI,kBAAkB;AAAA;AAAA,KAA/B;;AAAaA,sBAAkB,6DAxB9B,+DAAS;AACNH,aAAO,EAAE,CACL,4DADK,EAEL,4DAFK,EAGL,kEAHK,EAIL,0DAJK,EAKL,0EALK,EAML,uFANK,EAOL,0EAPK,EAQL,gEAAkBI,aAAlB,CAAgC,uEAAYC,cAA5C,CARK,EASL,8EATK,EAUL,wEAVK,EAWL,8EAXK,EAYL,0DAZK,CADH;AAeNC,eAAS,+BACF,mDADE,IAEL,8EAFK,EAGL,iFAHK,sBAIF,+CAJE,EAfH;AAqBNC,kBAAY,+BAAM,uDAAN,sBAA4C,uDAA5C,EArBN;AAsBNL,aAAO,+BAAM,uDAAN,sBAA4C,uDAA5C;AAtBD,KAAT,CAwB8B,GAAlBC,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDb,QAAaK,iBAAiB;AAC1B,iCAAoBC,WAApB,EAAqDC,MAArD,EAAqE;AAAA;;AAAjD,aAAAD,WAAA,GAAAA,WAAA;AAAiC,aAAAC,MAAA,GAAAA,MAAA;AAAkB;;AAD7C;AAAA;AAAA,oCAItBC,IAJsB,EAKtBC,KALsB,EAKI;AAE1B,cAAI,KAAKH,WAAL,CAAiBI,UAAjB,KAAgC,IAApC,EAA0C;AACtC,iBAAKH,MAAL,CAAYI,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACH;;AACD,iBAAO,IAAP;AACH;AAXyB;;AAAA;AAAA,OAA9B;;;;cACqC;;cAA4B;;;;AADpDN,qBAAiB,6DAD7B,kEAC6B,E,+EACO,kE,EAA4B,sD,EADnC,GAAjBA,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJN,QAAMO,MAAM,GAAG,CAAC,qEAAD,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOP,QAAaC,mBAAmB;AAC5B,qCAAc;AAAA;AAAE;;AADY;AAAA;AAAA,mCAGpB;AACJ,iBAAO,gDAAG,EAAH,CAAP;AACH;AAL2B;AAAA;AAAA,kCAMrB;AACH;AACA;AACA,cAAMC,CAAC,GAAG,IAAI,+CAAJ,CAAsB,UAAAC,QAAQ,EAAI;AACxC,gBAAMC,CAAC,GAAG,yDAELC,UAFK,CAEM,MAFN,EAGLC,KAHK,CAGC,OAHD,EAGU,IAHV,EAGgB,CAHhB,EAILC,GAJK,GAKLC,IALK,CAKA,UAAAC,aAAa,EAAI;AACnB,kBAAM3E,IAAI,GAAU,EAApB;AACA2E,2BAAa,CAACC,OAAd,CAAsB,UAAAC,GAAG,EAAI;AACzB;AACA7E,oBAAI,CAAC8E,IAAL,CAAUD,GAAG,CAAC9B,IAAJ,EAAV,EAFyB,CAGzB;AACH,eAJD;AAKAsB,sBAAQ,CAACP,IAAT,CAAc9D,IAAd;AACH,aAbK,CAAV;AAcH,WAfS,CAAV;AAgBA,iBAAOoE,CAAP;AACH;AA1B2B;AAAA;AAAA,mCA2BjBW,KA3BiB,EA2BJ;AACpB,cAAMX,CAAC,GAAG,IAAI,+CAAJ,CAAwB,UAAAC,QAAQ,EAAI;AAC1C,gBAAMC,CAAC,GAAG,yDAELC,UAFK,CAEM,OAFN,EAGLM,GAHK,CAGDE,KAHC,EAILR,UAJK,CAIM,SAJN,EAKN;AALM,aAMLE,GANK,GAOLC,IAPK,CAOA,UAAAC,aAAa,EAAI;AACnB,kBAAM5C,OAAO,GAAY,EAAzB;AACA4C,2BAAa,CAACC,OAAd,CAAsB,UAAAC,GAAG,EAAI;AACzB;AACAG,uBAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,EAAhB,EAAoB,MAApB,EAA4BL,GAAG,CAAC9B,IAAJ,EAA5B;AACAhB,uBAAO,CAAC+C,IAAR,CAAaD,GAAG,CAAC9B,IAAJ,EAAb;AACH,eAJD;AAKAsB,sBAAQ,CAACP,IAAT,CAAc/B,OAAd;AACH,aAfK,CAAV;AAgBH,WAjBS,CAAV;AAkBA,iBAAOqC,CAAP;AACH;AA/C2B;AAAA;AAAA,qCAgDlB;AACN,cAAMA,CAAC,GAAG,IAAI,+CAAJ,CAAwB,UAAAC,QAAQ,EAAI;AAC1C,gBAAMC,CAAC,GAAG,yDAELC,UAFK,CAEM,OAFN,EAGN;AAHM,aAILE,GAJK,GAKLC,IALK,CAKA,UAAAC,aAAa,EAAI;AACnB,kBAAMxC,OAAO,GAAY,EAAzB;AACAwC,2BAAa,CAACC,OAAd,CAAsB,UAAAC,GAAG,EAAI;AACzB;AACA1C,uBAAO,CAAC2C,IAAR,CAAa,MAAD,OAAC,CAAD;AAAGI,oBAAE,EAAEL,GAAG,CAACK;AAAX,iBAAC,EAAiBL,GAAG,CAAC9B,IAAJ,EAAjB,CAAb,EAFyB,CAGzB;AACH,eAJD;AAKAsB,sBAAQ,CAACP,IAAT,CAAc3B,OAAd;AACH,aAbK,CAAV;AAcH,WAfS,CAAV;AAgBA,iBAAOiC,CAAP;AACH;AAlE2B;AAAA;AAAA,iCAmEnBc,EAnEmB,EAmET;AACf,cAAMd,CAAC,GAAG,IAAI,+CAAJ,CAAsB,UAAAC,QAAQ,EAAI;AACxC,gBAAMC,CAAC,GAAG,yDAELC,UAFK,CAEM,OAFN,EAGLM,GAHK,CAGDK,EAHC,EAILT,GAJK,CAID;AAAEU,oBAAM,EAAE;AAAV,aAJC,EAKLT,IALK,CAKA,UAAAC,aAAa,EAAI;AACnB,kBAAMS,MAAM,qBAAeT,aAAa,CAAC5B,IAAd,EAAf,CAAZ;;AACAiC,qBAAO,CAACC,GAAR,CAAYG,MAAZ;AACAf,sBAAQ,CAACP,IAAT,CAAcsB,MAAd;AACH,aATK,CAAV;AAUH,WAXS,CAAV;AAYA,iBAAOhB,CAAP;AACH;AAjF2B;;AAAA;AAAA,OAAhC;;AAAaD,uBAAmB,6DAD/B,kEAC+B,E,iFAAA,GAAnBA,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNN,QAAMkB,QAAQ,GAAG,CAAC,yEAAD,EAAsB,yDAAtB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEP,QAAMC,WAAW,GAAwB,IAAI,kDAAJ,CAAkB,CAAlB,CAAzC;;AAGA,QAAaC,WAAW;AACpB,6BAAc;AAAA;;AACV,aAAKC,IAAL,GAAY;AACRN,YAAE,EAAE,KADI;AAERO,mBAAS,EAAE,OAFH;AAGRC,kBAAQ,EAAE,WAHF;AAIRC,eAAK,EAAE;AAJC,SAAZ;AAMH;;AARmB;AAAA;AAAA,0BAUXH,IAVW,EAUC;AACjBF,qBAAW,CAACxB,IAAZ,CAAiB0B,IAAjB;AACH;AAZmB;AAAA;AAAA,4BAcX;AACL,iBAAOF,WAAW,CAACM,YAAZ,EAAP;AACH;AAhBmB;;AAAA;AAAA,OAAxB;;AAAaL,eAAW,6DADvB,kEACuB,E,iFAAA,GAAXA,WAAW,CAAX","file":"modules-contribution-contribution-routing-module-es5.js","sourcesContent":["export default \"<h3>Frequently Asked Questions</h3>\\n<ngb-accordion #acc=\\\"ngbAccordion\\\">\\n    <ngb-panel *ngFor=\\\"let faq of faqs | async; let indexOfElement = index;\\\">\\n        <ng-template ngbPanelHeader>\\n            <button class=\\\"btn btn-link\\\" ngbPanelToggle>\\n                <span>&#9733; <b> {{faq.title}}</b></span>\\n            </button>\\n        </ng-template>\\n\\n        <ng-template ngbPanelContent>\\n            <div [innerHTML]=\\\"faq.postdesc\\\"></div>\\n        </ng-template>\\n    </ngb-panel>\\n</ngb-accordion>\\n<div class=\\\"d-flex justify-content-between p-2\\\">\\n    <ngb-pagination [collectionSize]=\\\"10\\\" page=\\\"1\\\" [pageSize]=\\\"10\\\"> </ngb-pagination>\\n    <select class=\\\"custom-select\\\" style=\\\"width: auto;\\\" name=\\\"pageSize\\\">\\n        <option [ngValue]=\\\"10\\\" [selected]=\\\"true\\\">10 items per page</option>\\n        <option [ngValue]=\\\"30\\\">30 items per page</option>\\n        <option [ngValue]=\\\"50\\\">50 items per page</option>\\n    </select>\\n</div>\\n\";","export default \"<h1>Posts</h1>\\n<ngb-accordion #acc=\\\"ngbAccordion\\\">\\n    <ngb-panel *ngFor=\\\"let post of posts | async; let indexOfElement = index;\\\">\\n        <ng-template ngbPanelHeader>\\n            <button class=\\\"btn btn-link\\\" ngbPanelToggle>\\n                <span>&#9733; <b> {{post.title}}</b></span>\\n            </button>\\n\\n            <button type=\\\"button\\\" (click)=\\\"setAsFAQ(post)\\\" *ngIf=\\\"post.isFAQ == null || !post.isFAQ\\\"\\n                class=\\\"btn btn-sm btn-outline-info float-lg-right\\\"\\n                title=\\\"Add to Frequently Asked Questions\\\">&#43;</button>\\n            <div class=\\\"float-lg-right\\\">\\n                <span class=\\\"float-lg-right\\\" *ngIf=\\\"post.isFAQ != null && post.isFAQ\\\"\\n                    class=\\\"badge badge-secondary\\\">FAQ</span>\\n            </div>\\n        </ng-template>\\n\\n        <ng-template ngbPanelContent>\\n            <div [innerHTML]=\\\"post.postdesc\\\"></div>\\n        </ng-template>\\n    </ngb-panel>\\n</ngb-accordion>\\n<div class=\\\"d-flex justify-content-between p-2\\\">\\n    <ngb-pagination [collectionSize]=\\\"10\\\" page=\\\"1\\\" [pageSize]=\\\"10\\\"> </ngb-pagination>\\n    <select class=\\\"custom-select\\\" style=\\\"width: auto;\\\" name=\\\"pageSize\\\">\\n        <option [ngValue]=\\\"10\\\" [selected]=\\\"true\\\">10 items per page</option>\\n        <option [ngValue]=\\\"30\\\">30 items per page</option>\\n        <option [ngValue]=\\\"50\\\">50 items per page</option>\\n    </select>\\n</div>\";","export default \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\" >\\r\\n        <!-- style=\\\"background-color:slategrey\\\" -->\\r\\n        <h5 style=\\\"color:rgb(47, 0, 255)\\\"      class=\\\"card-title\\\">  {{ (query | async).title }}</h5>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <!-- <h6 style=\\\"color:rgb(47, 0, 255)\\\" class=\\\"medium mb-1 \\\">Query Description</h6> -->\\r\\n        <div   [innerHTML]=\\\"(query | async).querydesc\\\"></div>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <ul class=\\\"list-group list-group-flush\\\">\\r\\n        <!-- <h6 style=\\\"color:rgb(47, 0, 255)\\\" class=\\\"medium mb-1 \\\">Responses</h6> -->\\r\\n        <li *ngFor=\\\"let r of replies | async; let indexOfElement = index;\\\" class=\\\"list-group-item\\\">\\r\\n            <h6 style=\\\"color:rgb(47, 0, 255)\\\" class=\\\"medium mb-1 \\\">Response {{indexOfElement + 1}}</h6>\\r\\n            <div [innerHTML]=\\\"r.desc\\\"></div>\\r\\n        </li>\\r\\n    </ul>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <!-- <h6 style=\\\"color:rgb(47, 0, 255)\\\" class=\\\"medium mb-1 \\\">Add Response</h6> -->\\r\\n        <angular-editor [config]=\\\"config\\\"></angular-editor>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n            <button type=\\\"submit\\\"  class=\\\"btn btn-primary \\\"  routerLink=\\\"/dashboard\\\"> Cancel</button>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success  float-right\\\" autofocus> Add Response</button>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"\\n<h1>Queries</h1>\\n<ngb-accordion #acc=\\\"ngbAccordion\\\">\\n    <ngb-panel *ngFor=\\\"let query of queries | async; let indexOfElement = index;\\\">\\n        <ng-template ngbPanelHeader>\\n            <a [routerLink]=\\\"['/contribution/query',query.id]\\\" routerLinkActive=\\\"router-link-active\\\" ss=\\\"btn btn-link\\\" ngbPanelToggle>\\n                <span>&#9733; <b> {{query.title}}</b></span>\\n            </a>\\n\\n            <button type=\\\"button\\\" (click)=\\\"setAsFAQ(query)\\\" *ngIf=\\\"query.isFAQ == null || !query.isFAQ\\\"\\n                class=\\\"btn btn-sm btn-outline-info float-lg-right\\\"\\n                title=\\\"Add to Frequently Asked Questions\\\">&#43;</button>\\n            <div class=\\\"float-lg-right\\\">\\n                <span class=\\\"float-lg-right\\\" *ngIf=\\\"query.isFAQ != null && query.isFAQ\\\"\\n                    class=\\\"badge badge-secondary\\\">FAQ</span>\\n            </div>\\n        </ng-template>\\n\\n        <ng-template ngbPanelContent>\\n            <div [innerHTML]=\\\"query.querydesc\\\"></div>\\n        </ng-template>\\n    </ngb-panel>\\n</ngb-accordion>\\n<div class=\\\"d-flex justify-content-between p-2\\\">\\n    <ngb-pagination [collectionSize]=\\\"10\\\" page=\\\"1\\\" [pageSize]=\\\"10\\\"> </ngb-pagination>\\n    <select class=\\\"custom-select\\\" style=\\\"width: auto;\\\" name=\\\"pageSize\\\">\\n        <option [ngValue]=\\\"10\\\" [selected]=\\\"true\\\">10 items per page</option>\\n        <option [ngValue]=\\\"30\\\">30 items per page</option>\\n        <option [ngValue]=\\\"50\\\">50 items per page</option>\\n    </select>\\n</div>\\n\";","export default \"<sb-layout-dashboard\\n    ><sb-dashboard-head ></sb-dashboard-head>\\n         <div class=\\\"card-body\\\"><sb-post ></sb-post></div>\\n</sb-layout-dashboard>\\n\";","export default \"<sb-layout-dashboard\\n    ><sb-dashboard-head ></sb-dashboard-head>\\n         <div class=\\\"card-body\\\"><sb-faq ></sb-faq></div>\\n</sb-layout-dashboard>\\n\";","export default \"<sb-layout-dashboard\\n    ><sb-dashboard-head ></sb-dashboard-head>\\n         <div class=\\\"card-body\\\"><router-outlet></router-outlet></div>\\n</sb-layout-dashboard>\\n\\n\\n<!-- <sb-layout-dashboard\\n    ><sb-dashboard-head ></sb-dashboard-head>\\n         <div class=\\\"card-body\\\"><sb-query ></sb-query></div>\\n</sb-layout-dashboard> -->\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9jb250cmlidXRpb24vY29tcG9uZW50cy9mYXEvZmFxLmNvbXBvbmVudC5zY3NzIn0= */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FAQ } from '@modules/contribution/models/faq.model';\nimport { ContributionService } from '@modules/contribution/services';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'sb-faq',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './faq.component.html',\n    styleUrls: ['faq.component.scss'],\n})\nexport class FAQComponent implements OnInit {\n    constructor(private contributionService: ContributionService) {}\n    faqs!: Observable<FAQ[]>;\n    ngOnInit() {\n        this.faqs = this.contributionService.getFAQs();\n    }\n}\n","import { FAQComponent } from './faq/faq.component';\nimport { PostComponent } from './post/post.component';\nimport { DetailqueryComponent } from './query/detailquery.component';\nimport { QueryComponent } from './query/query.component';\n\nexport const components = [PostComponent, QueryComponent, FAQComponent, DetailqueryComponent];\n\nexport * from './post/post.component';\nexport * from './query/query.component';\nexport * from './faq/faq.component';\nexport * from './query/detailquery.component';\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9jb250cmlidXRpb24vY29tcG9uZW50cy9wb3N0L3Bvc3QuY29tcG9uZW50LnNjc3MifQ== */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Post } from '@modules/addnewpost/models';\nimport * as firebase from 'firebase/app';\nimport { Observable } from 'rxjs';\n\nimport { PostService } from '../../../addnewpost/services/post.service';\n\n@Component({\n    selector: 'sb-post',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './post.component.html',\n    styleUrls: ['post.component.scss'],\n})\nexport class PostComponent implements OnInit {\n    posts!: Observable<Post[]>;\n\n    constructor(private postService: PostService) {}\n\n    ngOnInit() {\n        this.posts = this.postService.getPosts();\n    }\n\n    setAsFAQ(post: Post) {\n        post.isFAQ = true;\n        this.postService.setFAQstatus(post);\n    }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9jb250cmlidXRpb24vY29tcG9uZW50cy9xdWVyeS9kZXRhaWxxdWVyeS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\r\nimport { Query } from '@modules/addnewquery/models/query.model';\r\nimport { reply } from '@modules/contribution/models/reply.model';\r\nimport { ContributionService } from '@modules/contribution/services';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'sb-detailquery',\r\n    templateUrl: './detailquery.component.html',\r\n    styleUrls: ['./detailquery.component.scss'],\r\n})\r\nexport class DetailqueryComponent implements OnInit {\r\n    htmlContent = '';\r\n    public config: AngularEditorConfig = {\r\n        editable: true,\r\n        spellcheck: true,\r\n        height: '5rem',\r\n        minHeight: '15rem',\r\n        placeholder: '',\r\n        translate: 'no',\r\n        defaultParagraphSeparator: 'p',\r\n        defaultFontName: 'Arial',\r\n    };\r\n\r\n    query!: Observable<Query>;\r\n    replies!: Observable<reply[]>;\r\n    _queryDescription!: Observable<string | undefined>;\r\n    constructor(private contributionService: ContributionService, private route: ActivatedRoute) {}\r\n    ngOnInit() {\r\n        this.route.params.subscribe(params => {\r\n            this.query = this.contributionService.getQuery(params.docid as string);\r\n            this.replies = this.contributionService.getReplies(params.docid as string);\r\n        });\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9jb250cmlidXRpb24vY29tcG9uZW50cy9xdWVyeS9xdWVyeS5jb21wb25lbnQuc2NzcyJ9 */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Query } from '@modules/addnewquery/models';\nimport * as firebase from 'firebase/app';\nimport { Observable } from 'rxjs';\n\nimport { QueryService } from '../../../addnewquery/services/query.service';\n\n@Component({\n    selector: 'sb-query',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './query.component.html',\n    styleUrls: ['query.component.scss'],\n})\nexport class QueryComponent implements OnInit {\n    queries!: Observable<Query[]>;\n\n    constructor(private queryService: QueryService) {}\n\n    ngOnInit() {\n        this.queries = this.queryService.getQueries();\n    }\n\n    setAsFAQ(query: Query) {\n        query.isFAQ = true;\n        this.queryService.setFAQstatus(query);\n    }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9jb250cmlidXRpb24vY29udGFpbmVycy9Qb3N0Y29udHJpL3Bvc3Rjb250cmkuY29tcG9uZW50LnNjc3MifQ== */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n@Component({\n    selector: 'sb-postcontri',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './postcontri.component.html',\n    styleUrls: ['postcontri.component.scss'],\n})\nexport class PostContriComponent implements OnInit {\n    constructor() {}\n    ngOnInit() {}\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9jb250cmlidXRpb24vY29udGFpbmVycy9mYXFjb250cmkvZmFxY29udHJpLmNvbXBvbmVudC5zY3NzIn0= */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'sb-faqcontri',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './faqcontri.component.html',\n    styleUrls: ['faqcontri.component.scss'],\n})\nexport class FAQContriComponent implements OnInit {\n    constructor() {}\n    ngOnInit() {}\n}\n","import { FAQContriComponent } from './faqcontri/faqcontri.component';\nimport { PostContriComponent } from './Postcontri/postcontri.component';\nimport { QueryContriComponent } from './querycontri/querycontri.component';\n\nexport const containers = [PostContriComponent, QueryContriComponent, FAQContriComponent];\n\nexport * from './querycontri/querycontri.component';\nexport * from './faqcontri/faqcontri.component';\nexport * from './Postcontri/postcontri.component';\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9jb250cmlidXRpb24vY29udGFpbmVycy9xdWVyeWNvbnRyaS9xdWVyeWNvbnRyaS5jb21wb25lbnQuc2NzcyJ9 */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'sb-querycontri',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './querycontri.component.html',\n    styleUrls: ['querycontri.component.scss'],\n})\nexport class QueryContriComponent implements OnInit {\n    constructor() {}\n    ngOnInit() {}\n}\n","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SBRouteData } from '@modules/navigation/models';\n\n/* Module */\nimport { ContributionModule } from './contribution.module';\n\n/* Containers */\nimport * as contributionContainers from './containers';\n\n/* Guards */\nimport * as contributionGuards from './guards';\n/* Components */\nimport * as contributionComponents from './components';\n\n/* Routes */\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'post',\n    },\n    {\n        path: 'post',\n        canActivate: [contributionGuards.ContributionGuard],\n        component: contributionContainers.PostContriComponent,\n        data: {\n            title: 'Post - SME Adviser',\n        } as SBRouteData,\n    },\n    {\n        path: 'query',\n        canActivate: [contributionGuards.ContributionGuard],\n        component: contributionContainers.QueryContriComponent,\n        children: [\n            {\n                path: '',\n                component: contributionComponents.QueryComponent,\n            },\n            {\n                path: ':docid',\n                component: contributionComponents.DetailqueryComponent,\n            },\n        ],\n        data: {\n            title: 'Query - SME Adviser',\n        } as SBRouteData,\n    },\n    {\n        path: 'faq',\n        canActivate: [contributionGuards.ContributionGuard],\n        component: contributionContainers.FAQContriComponent,\n        data: {\n            title: 'FAQ - SME Adviser',\n        } as SBRouteData,\n    },\n];\n\n@NgModule({\n    imports: [ContributionModule, RouterModule.forChild(ROUTES)],\n    exports: [RouterModule],\n})\nexport class ContributionRoutingModule {}\n","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AngularEditorModule } from '@kolkov/angular-editor';\n\n//  Firebase\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\n\n/* Modules */\nimport { AppCommonModule } from '@common/app-common.module';\nimport { NavigationModule } from '@modules/navigation/navigation.module';\n\n/* Components */\nimport * as contributionComponents from './components';\n\n/* Containers */\nimport * as contributionContainers from './containers';\n\n/* Guards */\nimport * as contributionGuards from './guards';\n\n/* Services */\nimport * as contributionServices from './services';\n\nimport { PostService } from '../addnewpost/services/post.service';\nimport { environment } from '../../environments/environment';\nimport { QueryService } from '../addnewquery/services/query.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        FormsModule,\n        AppCommonModule,\n        NavigationModule,\n        AngularEditorModule,\n        AngularFireModule.initializeApp(environment.firebaseConfig),\n        AngularFirestoreModule, // firestore\n        AngularFireAuthModule, // auth\n        AngularFireStorageModule, // storage\n        FormsModule,\n    ],\n    providers: [\n        ...contributionServices.services,\n        PostService,\n        QueryService,\n        ...contributionGuards.guards,\n    ],\n    declarations: [...contributionContainers.containers, ...contributionComponents.components],\n    exports: [...contributionContainers.containers, ...contributionComponents.components],\n})\nexport class ContributionModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from '@modules/auth/services';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class ContributionGuard implements CanActivate {\n    constructor(private authService: AuthService, public router: Router) {}\n\n    canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.authService.isLoggedIn !== true) {\n            this.router.navigate(['auth/login']);\n        }\n        return true;\n    }\n}\n","import { ContributionGuard } from './contribution.guard';\n\nexport const guards = [ContributionGuard];\n\nexport * from './contribution.guard';\n","import { Injectable } from '@angular/core';\nimport { Query } from '@modules/addnewquery/models';\nimport * as firebase from 'firebase/app';\nimport { Observable, of } from 'rxjs';\n\nimport { FAQ } from '../models/faq.model';\nimport { reply } from '../models/reply.model';\n\n@Injectable()\nexport class ContributionService {\n    constructor() {}\n\n    getAuth$(): Observable<{}> {\n        return of({});\n    }\n    getFAQs(): Observable<FAQ[]> {\n        // const t: AngularFirestoreCollection = this.firestore.collection<Post>('post');\n        // return t.valueChanges();\n        const o = new Observable<FAQ[]>(observer => {\n            const t = firebase\n                .firestore()\n                .collection('post')\n                .where('isFAQ', '==', 1)\n                .get()\n                .then(querySnapshot => {\n                    const faqs: FAQ[] = [];\n                    querySnapshot.forEach(doc => {\n                        // doc.data() is never undefined for query doc snapshots\n                        faqs.push(doc.data());\n                        //console.log(doc.id, ' => ', doc.data());\n                    });\n                    observer.next(faqs);\n                });\n        });\n        return o;\n    }\n    getReplies(docId: string): Observable<reply[]> {\n        const o = new Observable<reply[]>(observer => {\n            const t = firebase\n                .firestore()\n                .collection('query')\n                .doc(docId)\n                .collection('replies')\n                // .where('isFAQ', '==', 1)\n                .get()\n                .then(querySnapshot => {\n                    const replies: reply[] = [];\n                    querySnapshot.forEach(doc => {\n                        // doc.data() is never undefined for query doc snapshots\n                        console.log(doc.id, ' => ', doc.data());\n                        replies.push(doc.data());\n                    });\n                    observer.next(replies);\n                });\n        });\n        return o;\n    }\n    getQueries(): Observable<Query[]> {\n        const o = new Observable<Query[]>(observer => {\n            const t = firebase\n                .firestore()\n                .collection('query')\n                // .where('isFAQ', '==', 1)\n                .get()\n                .then(querySnapshot => {\n                    const queries: Query[] = [];\n                    querySnapshot.forEach(doc => {\n                        // doc.data() is never undefined for query doc snapshots\n                        queries.push({ id: doc.id, ...doc.data() });\n                        // console.log(doc.id, ' => ', doc.data());\n                    });\n                    observer.next(queries);\n                });\n        });\n        return o;\n    }\n    getQuery(id: string): Observable<Query> {\n        const o = new Observable<Query>(observer => {\n            const t = firebase\n                .firestore()\n                .collection('query')\n                .doc(id)\n                .get({ source: 'server' })\n                .then(querySnapshot => {\n                    const _query: Query = { ...querySnapshot.data() };\n                    console.log(_query);\n                    observer.next(_query);\n                });\n        });\n        return o;\n    }\n}\n","import { ContributionService } from './contribution.service';\nimport { UserService } from './user.service';\n\nexport const services = [ContributionService, UserService];\n\nexport * from './contribution.service';\nexport * from './user.service';\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\n\nimport { User } from '../models';\n\nconst userSubject: ReplaySubject<User> = new ReplaySubject(1);\n\n@Injectable()\nexport class UserService {\n    constructor() {\n        this.user = {\n            id: '123',\n            firstName: 'Start',\n            lastName: 'Bootstrap',\n            email: 'no-reply@startbootstrap.com',\n        };\n    }\n\n    set user(user: User) {\n        userSubject.next(user);\n    }\n\n    get user$(): Observable<User> {\n        return userSubject.asObservable();\n    }\n}\n"]}