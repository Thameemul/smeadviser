{"version":3,"sources":["./src/modules/auth/containers/forgot-password/forgot-password.component.html","./src/modules/auth/containers/login/login.component.html","./src/modules/auth/containers/skills/skills.component.html","./src/modules/auth/containers/usermanagement/usermanagement.component.html","./src/modules/auth/auth-routing.module.ts","./src/modules/auth/auth.module.ts","./src/modules/auth/components/index.ts","./src/modules/auth/containers/forgot-password/forgot-password.component.scss","./src/modules/auth/containers/forgot-password/forgot-password.component.ts","./src/modules/auth/containers/index.ts","./src/modules/auth/containers/login/login.component.scss","./src/modules/auth/containers/login/login.component.ts","./src/modules/auth/containers/skills/skills.component.css","./src/modules/auth/containers/skills/skills.component.ts","./src/modules/auth/containers/usermanagement/usermanagement.component.scss","./src/modules/auth/containers/usermanagement/usermanagement.component.ts","./src/modules/auth/guards/auth.guard.ts","./src/modules/auth/guards/index.ts"],"names":[],"mappings":"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","file":"modules-auth-auth-routing-module-es2015.js","sourcesContent":["export default \"<sb-layout-auth\\n    ><div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-lg-5\\\">\\n                <div class=\\\"card shadow-lg border-0 rounded-lg mt-5\\\">\\n                    <div class=\\\"card-header\\\"><h3 class=\\\"text-center font-weight-light my-4\\\">Password Recovery</h3></div>\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"medium mb-3 text-muted\\\">Enter your email address and we will send you a link to reset your password.</div>\\n                        <!-- <form #form=\\\"ngForm\\\" #form=\\\"ngForm\\\"  > -->\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"medium mb-1\\\" >Email</label>\\n                                <input class=\\\"form-control py-4\\\" type=\\\"email\\\"  placeholder=\\\"Enter email address\\\" [(ngModel)]=\\\"user.email\\\"/></div>\\n                            <div class=\\\"form-group d-flex align-items-center justify-content-between mt-4 mb-0\\\">\\n                                <a class=\\\"medium\\\" routerLink=\\\"/auth/login\\\">Return to login</a>\\n                                <a class=\\\"btn btn-primary\\\" (click) = \\\"resetPassword(user)\\\">Reset Password</a></div>\\n                        <!-- </form> -->\\n                    </div>\\n                    <div class=\\\"card-footer text-center\\\">\\n                        <div class=\\\"medium\\\"><a routerLink=\\\"/auth/skills\\\">Need a new account? Sign up!</a></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div></sb-layout-auth\\n>\\n\";","export default \"<sb-layout-auth\\n    ><div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n             <div class=\\\"col-md-5\\\">\\n                <div class=\\\"card shadow-lg border-0 rounded-lg mt-5\\\">\\n                    <!-- <div class=\\\"card-header\\\">\\n                        <h3 class=\\\"text-center font-weight-dark my-4\\\">SME Adviser</h3>\\n                    </div> -->\\n                    <div class=\\\"card-body align-items-center\\\">\\n                        <img src=\\\"../../../../assets/img/small.png\\\" style=\\\"width: 91%\\\">\\n                    </div>\\n                </div>\\n             </div>\\n\\n\\n            <div class=\\\"col-md-7\\\">\\n                <div class=\\\"card shadow-lg border-0 rounded-lg mt-5\\\">\\n\\n                    <div class=\\\"card-header\\\">\\n                        <h3 class=\\\"text-center font-weight-dark my-4\\\">Login</h3>\\n                        <!-- <img src=\\\"../../../../assets/img/logo_SME Adviser_Final_c.png\\\" style=\\\"width: 100%\\\"> -->\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <!-- <form > -->\\n                            <div class=\\\"form-group\\\"><label class=\\\"medium mb-2\\\" >Email *</label>\\n                                <input class=\\\"form-control py-4\\\" [(ngModel)]=\\\"email\\\"  type=\\\"email\\\" placeholder=\\\"Enter email\\\" required /></div>\\n                            <div class=\\\"form-group\\\"><label class=\\\"medium mb-2\\\" >Password *</label>\\n                                <input class=\\\"form-control py-4\\\"  [(ngModel)]=\\\"password\\\"  type=\\\"password\\\" placeholder=\\\"Enter password\\\" required/></div>\\n                            <div class=\\\"form-group\\\">\\n                                <div class=\\\"custom-control custom-checkbox\\\"><input class=\\\"custom-control-input\\\" type=\\\"checkbox\\\" /><label class=\\\"custom-control-label\\\" >Remember password</label></div>\\n                            </div>\\n                            <div class=\\\"form-group d-flex align-items-center justify-content-between mt-4 mb-0\\\"><a class=\\\"medium\\\" routerLink=\\\"/auth/forgot-password\\\">Forgot Password?</a>\\n                                <a class=\\\"btn btn-primary\\\"  (click)=\\\"SignIn()\\\" autofocus  >Login</a></div>\\n                        <!-- </form> -->\\n                    </div>\\n                    <div class=\\\"card-footer text-center\\\">\\n                        <div class=\\\"medium\\\"><a routerLink=\\\"/auth/skills\\\" >Sign up!</a></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div></sb-layout-auth\\n>\\n\";","export default \"<sb-layout-auth\\n><div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"card shadow-lg border-0 rounded-lg mt-5\\\">\\n                <div class=\\\"card-header\\\"><h3 class=\\\"text-center font-weight-dark my-0\\\">Registration</h3></div>\\n                <div class=\\\"card-body\\\">\\n                    <form #ngForm=\\\"ngForm\\\" name=\\\"\\\">\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\"><label class=\\\"medium mb-1 \\\" >First Name *</label>\\n                                    <input class=\\\"form-control py-1\\\" name=\\\"firstName\\\" #firstName=\\\"ngModel\\\" [(ngModel)]=\\\"model.firstName\\\" required/>\\n                                    <div *ngIf=\\\"firstName.invalid && firstName.touched\\\" class=\\\"validation-error\\\">This field is required </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\"><label class=\\\"medium mb-1\\\" >Last Name *</label>\\n                                    <input class=\\\"form-control py-1\\\" name=\\\"lastName\\\" #lastName=\\\"ngModel\\\"\\n                                        [(ngModel)]=\\\"model.lastName\\\" required />\\n                                    <div *ngIf=\\\"lastName.invalid && lastName.touched\\\" class=\\\"validation-error\\\">This field is required </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\"><label class=\\\"medium mb-1\\\" >Mobile No </label>\\n                                    <input class=\\\"form-control py-1\\\" name=\\\"mobile\\\" #mobile=\\\"ngModel\\\" [(ngModel)]=\\\"model.mobile\\\" autocomplete=\\\"false\\\" type=\\\"tel\\\"/>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\"><label class=\\\"medium mb-1\\\" >Team Name</label>\\n                                    <input class=\\\"form-control py-1\\\" name=\\\"teamname\\\" #teamname=\\\"ngModel\\\" [(ngModel)]=\\\"model.teamName\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\"><label class=\\\"medium mb-1\\\" >Desk No</label>\\n                                    <input class=\\\"form-control py-1\\\" name=\\\"deskno\\\" #desnko=\\\"ngModel\\\" [(ngModel)]=\\\"model.deskNo\\\"  />\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\"><label class=\\\"medium mb-1\\\" >Email *</label>\\n                                    <input class=\\\"form-control py-1\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"model.email\\\" type=\\\"email\\\"  required/>\\n                                    <div *ngIf=\\\"email.invalid && email.touched\\\" class=\\\"validation-error\\\">This field is required </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\"><label class=\\\"medium mb-1\\\" >Password *</label>\\n                                    <input class=\\\"form-control py-1\\\" type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"model.password\\\" required />\\n                                    <div *ngIf=\\\"password.invalid && password.touched\\\" class=\\\"validation-error\\\">This field is required </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\"><label class=\\\"medium mb-1\\\" >Confirm Password *</label>\\n                                    <input class=\\\"form-control py-1\\\" type=\\\"password\\\" name=\\\"confirmPassword\\\" #confirmPassword=\\\"ngModel\\\" [(ngModel)]=\\\"model.confirmPassword\\\" required/>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                 <small class=\\\"text-muted \\\">* Password should be at least 6 characters long</small>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row \\\">\\n                            <div class=\\\"col-md-6\\\" >\\n                                   <div class=\\\"form-group\\\">\\n\\n                                        <label class=\\\"medium mb-1\\\" >SME Mark </label>\\n                                            <div class=\\\"checkbox\\\" >\\n                                               <div>\\n                                                    <input style=\\\"width: 30px;\\\" type=\\\"checkbox\\\" value=\\\"\\\" name=\\\"techsme\\\" #techsme=\\\"ngModel\\\" [(ngModel)]=\\\"model.techSME\\\"/><label>Technical</label>\\n                                                    <input style=\\\"width: 30px;\\\" type=\\\"checkbox\\\" value=\\\"\\\" name=\\\"domainsme\\\" #domainsme=\\\"ngModel\\\" [(ngModel)]=\\\"model.domainSME\\\"/><label>Domain</label>\\n                                                    <input style=\\\"width: 30px;\\\" type=\\\"checkbox\\\" value=\\\"\\\" name=\\\"otherssme\\\" #otherssme=\\\"ngModel\\\" [(ngModel)]=\\\"model.othersSME\\\"/><label>Others</label>\\n                                                </div>\\n                                            </div>\\n                                    </div>\\n                            </div>\\n                            <div class=\\\"col-md-6 \\\" >\\n                                <label class=\\\"medium mb-1\\\" >Skills *</label>\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"skill\\\" #newSkill=\\\"ngModel\\\"\\n                                        [(ngModel)]='skill'\\n                                        placeholder=\\\"Add your skills here (Ex: Java)\\\" >\\n                                    <div class=\\\"input-group-append\\\">\\n                                         <button class=\\\"btn btn-success\\\" (click)=\\\"onAdd()\\\">Add\\n                                             Skills</button>\\n                                    </div>\\n                                </div>\\n                                <div style=\\\"height: 80px;\\\" class=\\\"overflow-auto\\\" >\\n                                    <ul id=\\\"mySkills\\\" *ngIf=\\\"model.skills != null\\\"  >\\n                                            <li  *ngFor=\\\"let skill of model.skills\\\">\\n                                                {{ skill }}\\n                                            </li>\\n                                    </ul>\\n                                    <label *ngIf=\\\"model.skills == null || model.skills.length==0\\\">No skills Added</label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col-md-12 text-center\\\">\\n                                <div class=\\\"form-group \\\"><button class=\\\"btn-lg btn-primary\\\"\\n                                         (click)=\\\"onSubmit(ngForm)\\\" [disabled]=\\\"!ngForm.valid || !ngForm.touched\\\">Create Account</button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </form>\\n                </div>\\n                <div class=\\\"card-footer text-center\\\">\\n                    <div class=\\\"medium\\\"><a routerLink=\\\"/auth/login\\\">Have an account? Go to login</a></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div></sb-layout-auth>\\n\";","export default \" <sb-layout-auth\\n    ><div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-lg-7\\\">\\n                <div class=\\\"card shadow-lg border-0 rounded-lg mt-5\\\">\\n                    <div class=\\\"card-header\\\"><h3 class=\\\"text-center font-weight-dark my-4\\\">Password Reset</h3></div>\\n                    <div class=\\\"card-body\\\">\\n                            <div class=\\\"form-row\\\">\\n                                <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"medium mb-1\\\" >Password</label>\\n                                        <input class=\\\"form-control py-4\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\"  type=\\\"password\\\" required />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"medium mb-1\\\" >Confirm Password</label>\\n                                        <input class=\\\"form-control py-4\\\"  [(ngModel)]=\\\"user.confirmpassword\\\" type=\\\"password\\\"  required />\\n                                    </div>\\n                                </div>\\n                            </div>\\n                             <div class=\\\"form-row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                         <small class=\\\"text-muted\\\">* Password should be at least 6 characters long</small>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group mt-4 mb-0\\\">\\n                                <button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"handleResetPassword(user)\\\" routerLink=\\\"/auth/login\\\"  >Confirm</button>\\n                            </div>\\n                    </div>\\n                    <div class=\\\"card-footer text-center\\\">\\n                        <div class=\\\"medium\\\"><a routerLink=\\\"/auth/login\\\" >Have an account already? Go to login</a></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div></sb-layout-auth\\n>\\n\";","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SBRouteData } from '@modules/navigation/models';\n\n/* Module */\nimport { AuthModule } from './auth.module';\n\n/* Containers */\nimport * as authContainers from './containers';\n\n/* Guards */\nimport * as authGuards from './guards';\nimport { UserManagementComponent } from './containers/usermanagement/usermanagement.component';\n\n/* Routes */\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'login',\n    },\n    {\n        path: 'login',\n        canActivate: [],\n        component: authContainers.LoginComponent,\n        data: {\n            title: 'Login - SME Adviser',\n        } as SBRouteData,\n    },\n\n    {\n        path: 'skills',\n        canActivate: [],\n        component: authContainers.SkillsComponent,\n        data: {\n            title: 'Skills set',\n        } as SBRouteData,\n    },\n    {\n        path: 'forgot-password',\n        canActivate: [],\n        component: authContainers.ForgotPasswordComponent,\n        data: {\n            title: 'Forgot Password - SME Adviser',\n        } as SBRouteData,\n    },\n    {\n        path: 'reset-password',\n        canActivate: [],\n        component: authContainers.UserManagementComponent,\n        data: {\n            title: 'Reset Password - SME Adviser',\n        } as SBRouteData,\n    },\n];\n\n@NgModule({\n    imports: [AuthModule, RouterModule.forChild(ROUTES)],\n    exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n//  Firebase\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\n\n/* Modules */\nimport { AppCommonModule } from '@common/app-common.module';\nimport { NavigationModule } from '@modules/navigation/navigation.module';\n\n/* Components */\nimport * as authComponents from './components';\n\n/* Containers */\nimport * as authContainers from './containers';\n\n/* Guards */\nimport * as authGuards from './guards';\n\n/* Services */\nimport * as authServices from './services';\nimport { environment } from '../../environments/environment';\nimport { UserSkillService } from './services/userskill.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        FormsModule,\n        AppCommonModule,\n        NavigationModule,\n        AngularFireModule.initializeApp(environment.firebaseConfig),\n        AngularFirestoreModule, // firestore\n        AngularFireAuthModule, // auth\n        AngularFireStorageModule, // storage\n        FormsModule,\n    ],\n    providers: [...authServices.services, UserSkillService, ...authGuards.guards],\n    declarations: [...authContainers.containers, ...authComponents.components],\n    exports: [...authContainers.containers, ...authComponents.components],\n})\nexport class AuthModule {}\n","export const components = [];\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyJ9 */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { User } from '@testing/mocks';\n\n@Component({\n    selector: 'sb-forgot-password',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './forgot-password.component.html',\n    styleUrls: ['forgot-password.component.scss'],\n})\nexport class ForgotPasswordComponent implements OnInit {\n    user = {} as User;\n    constructor(private authservice: AuthService) { }\n\n    resetEmail!: string;\n    ngOnInit() {}\n\n    async resetPassword(user: User) {\n        this.authservice.resetPassword(this.user.email);\n    }\n}\n","import { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { LoginComponent } from './login/login.component';\nimport { SkillsComponent } from './skills/skills.component';\nimport { UserManagementComponent } from './usermanagement/usermanagement.component';\n\nexport const containers = [\n    LoginComponent,\n    UserManagementComponent,\n    ForgotPasswordComponent,\n    SkillsComponent,\n];\n\nexport * from './login/login.component';\nexport * from './usermanagement/usermanagement.component';\nexport * from './forgot-password/forgot-password.component';\nexport * from './skills/skills.component';\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'sb-login',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './login.component.html',\n    styleUrls: ['login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n    email!: string;\n    password!: string;\n\n    constructor(private authservice: AuthService, private router: Router) { }\n\n    ngOnInit() {\n        //  this.resetForm();\n    }\n\n    resetForm(form?: NgForm) {\n        // if (form != null) {\n        //     form.reset();\n        // }\n\n        // this.authservice.userData = {\n        //     id: '',\n        //     firstName: '',\n        //     lastName: '',\n        //     email: '',\n        //     password: '',\n        //     confirmPassword: '',\n        // };\n    }\n\n    SignIn() {\n        this.authservice.SignIn(this.email, this.password);\n        this.email = '';\n        this.password = '';\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvc2tpbGxzL3NraWxscy5jb21wb25lbnQuY3NzIn0= */\";","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserSkill } from '@modules/auth/models/userskill.model';\nimport { User } from '@testing/mocks';\n\nimport { AuthService } from '../../services/auth.service';\nimport { UserService } from '../../services/user.service';\nimport { UserSkillService } from '../../services/userskill.service';\n\n@Component({\n    selector: 'sb-skills',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './skills.component.html',\n    styleUrls: ['skills.component.css'],\n})\nexport class SkillsComponent implements OnInit {\n    skill = '';\n    model: UserSkill;\n    email!: string;\n    password!: string;\n\n    user?: User;\n\n    constructor(\n        private userskillservice: UserSkillService,\n        private authService: AuthService,\n        private userservice: UserService,\n        private firestore: AngularFirestore,\n        private router: Router\n    ) {\n        this.model = {\n            id: '',\n            firstName: '',\n            lastName: '',\n            mobile: '',\n            teamName: '',\n            deskNo: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            techSME: false,\n            domainSME: false,\n            othersSME: false,\n            skills: [],\n        };\n    }\n\n    ngOnInit() {\n        this.resetForm();\n    }\n\n    onAdd() {\n        if (\n            this.skill.trim() !== '' &&\n            this.model.skills.findIndex(value => {\n                return this.skill === value;\n            }) < 0\n        ) {\n            this.model.skills.push(this.skill);\n        }\n        this.skill = '';\n    }\n\n    resetForm(form?: NgForm) {\n        if (form != null) {\n            form.reset();\n        }\n    }\n\n    onSubmit(form: NgForm) {\n        const data = form.value;\n\n        this.authService.SignUp(this.model.email, this.model.password).then(\n            (userid: string) => {\n                this.model.id = userid;\n                this.userskillservice.createUserSkill(this.model).then(() => {\n                    this.resetForm(form);\n                    // this.router.navigate(['dashboard']);\n                    alert('User Registered successfully');\n                    this.router.navigate(['dashboard']);\n                });\n            },\n            (message: string) => {\n                alert(\n                    'User Registration failed. Please try again. If the issue persists, please contact Admin.'\n                );\n            }\n        );\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvdXNlcm1hbmFnZW1lbnQvdXNlcm1hbmFnZW1lbnQuY29tcG9uZW50LnNjc3MifQ== */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from '@modules/auth/services';\n\nimport { User } from '../../models/user.model';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n    selector: 'sb-usermanagement',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './usermanagement.component.html',\n    styleUrls: ['usermanagement.component.scss'],\n})\nexport class UserManagementComponent implements OnInit {\n    user!: User;\n\n    constructor(private authservice: AuthService, private userservice: UserService) {}\n\n    ngOnInit() {}\n\n    // async handleResetPassword(user: User) {\n    //     this.authservice.handleResetPassword(this.user.password, this.user.confirmPassword);\n    // }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    canActivate(): Observable<boolean> {\n        return of(true);\n    }\n}\n","import { AuthGuard } from './auth.guard';\n\nexport const guards = [AuthGuard];\n\nexport * from './auth.guard';\n"],"sourceRoot":"webpack:///"}