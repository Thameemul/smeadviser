{"version":3,"sources":["webpack:///src/modules/auth/containers/forgot-password/forgot-password.component.html","webpack:///src/modules/auth/containers/login/login.component.html","webpack:///src/modules/auth/containers/skills/skills.component.html","webpack:///src/modules/auth/containers/usermanagement/usermanagement.component.html","webpack:///src/modules/auth/auth-routing.module.ts","webpack:///src/modules/auth/auth.module.ts","webpack:///src/modules/auth/components/index.ts","webpack:///src/modules/auth/containers/forgot-password/forgot-password.component.scss","webpack:///src/modules/auth/containers/forgot-password/forgot-password.component.ts","webpack:///src/modules/auth/containers/index.ts","webpack:///src/modules/auth/containers/login/login.component.scss","webpack:///src/modules/auth/containers/login/login.component.ts","webpack:///src/modules/auth/containers/skills/skills.component.css","webpack:///src/modules/auth/containers/skills/skills.component.ts","webpack:///src/modules/auth/containers/usermanagement/usermanagement.component.scss","webpack:///src/modules/auth/containers/usermanagement/usermanagement.component.ts","webpack:///src/modules/auth/guards/auth.guard.ts","webpack:///src/modules/auth/guards/index.ts"],"names":["ROUTES","path","pathMatch","redirectTo","canActivate","component","data","title","AuthRoutingModule","imports","forChild","exports","AuthModule","initializeApp","firebaseConfig","providers","declarations","components","ForgotPasswordComponent","authservice","user","resetPassword","email","selector","changeDetection","OnPush","template","containers","LoginComponent","router","form","SignIn","password","SkillsComponent","userskillservice","authService","userservice","firestore","skill","model","id","firstName","lastName","mobile","teamName","deskNo","confirmPassword","techSME","domainSME","othersSME","skills","resetForm","trim","findIndex","value","push","reset","SignUp","then","userid","createUserSkill","alert","navigate","message","UserManagementComponent","AuthGuard","guards"],"mappings":"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","file":"modules-auth-auth-routing-module-es5.js","sourcesContent":["export default \"<sb-layout-auth\\n    ><div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-lg-5\\\">\\n                <div class=\\\"card shadow-lg border-0 rounded-lg mt-5\\\">\\n                    <div class=\\\"card-header\\\"><h3 class=\\\"text-center font-weight-light my-4\\\">Password Recovery</h3></div>\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"medium mb-3 text-muted\\\">Enter your email address and we will send you a link to reset your password.</div>\\n                        <!-- <form #form=\\\"ngForm\\\" #form=\\\"ngForm\\\"  > -->\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"medium mb-1\\\" >Email</label>\\n                                <input class=\\\"form-control py-4\\\" type=\\\"email\\\"  placeholder=\\\"Enter email address\\\" [(ngModel)]=\\\"user.email\\\"/></div>\\n                            <div class=\\\"form-group d-flex align-items-center justify-content-between mt-4 mb-0\\\">\\n                                <a class=\\\"medium\\\" routerLink=\\\"/auth/login\\\">Return to login</a>\\n                                <a class=\\\"btn btn-primary\\\" (click) = \\\"resetPassword(user)\\\">Reset Password</a></div>\\n                        <!-- </form> -->\\n                    </div>\\n                    <div class=\\\"card-footer text-center\\\">\\n                        <div class=\\\"medium\\\"><a routerLink=\\\"/auth/skills\\\">Need a new account? Sign up!</a></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div></sb-layout-auth\\n>\\n\";","export default \"<sb-layout-auth\\n    ><div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n             <div class=\\\"col-md-5\\\">\\n                <div class=\\\"card shadow-lg border-0 rounded-lg mt-5\\\">\\n                    <!-- <div class=\\\"card-header\\\">\\n                        <h3 class=\\\"text-center font-weight-dark my-4\\\">SME Adviser</h3>\\n                    </div> -->\\n                    <div class=\\\"card-body align-items-center\\\">\\n                        <img src=\\\"../../../../assets/img/small.png\\\" style=\\\"width: 91%\\\">\\n                    </div>\\n                </div>\\n             </div>\\n\\n\\n            <div class=\\\"col-md-7\\\">\\n                <div class=\\\"card shadow-lg border-0 rounded-lg mt-5\\\">\\n\\n                    <div class=\\\"card-header\\\">\\n                        <h3 class=\\\"text-center font-weight-dark my-4\\\">Login</h3>\\n                        <!-- <img src=\\\"../../../../assets/img/logo_SME Adviser_Final_c.png\\\" style=\\\"width: 100%\\\"> -->\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <!-- <form > -->\\n                            <div class=\\\"form-group\\\"><label class=\\\"medium mb-2\\\" >Email *</label>\\n                                <input class=\\\"form-control py-4\\\" [(ngModel)]=\\\"email\\\"  type=\\\"email\\\" placeholder=\\\"Enter email\\\" required /></div>\\n                            <div class=\\\"form-group\\\"><label class=\\\"medium mb-2\\\" >Password *</label>\\n                                <input class=\\\"form-control py-4\\\"  [(ngModel)]=\\\"password\\\"  type=\\\"password\\\" placeholder=\\\"Enter password\\\" required/></div>\\n                            <div class=\\\"form-group\\\">\\n                                <div class=\\\"custom-control custom-checkbox\\\"><input class=\\\"custom-control-input\\\" type=\\\"checkbox\\\" /><label class=\\\"custom-control-label\\\" >Remember password</label></div>\\n                            </div>\\n                            <div class=\\\"form-group d-flex align-items-center justify-content-between mt-4 mb-0\\\"><a class=\\\"medium\\\" routerLink=\\\"/auth/forgot-password\\\">Forgot Password?</a>\\n                                <a class=\\\"btn btn-primary\\\"  (click)=\\\"SignIn()\\\" autofocus  >Login</a></div>\\n                        <!-- </form> -->\\n                    </div>\\n                    <div class=\\\"card-footer text-center\\\">\\n                        <div class=\\\"medium\\\"><a routerLink=\\\"/auth/skills\\\" >Sign up!</a></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div></sb-layout-auth\\n>\\n\";","export default \"<sb-layout-auth\\n><div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"card shadow-lg border-0 rounded-lg mt-5\\\">\\n                <div class=\\\"card-header\\\"><h3 class=\\\"text-center font-weight-dark my-0\\\">Registration</h3></div>\\n                <div class=\\\"card-body\\\">\\n                    <form #ngForm=\\\"ngForm\\\" name=\\\"\\\">\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\"><label class=\\\"medium mb-1 \\\" >First Name *</label>\\n                                    <input class=\\\"form-control py-1\\\" name=\\\"firstName\\\" #firstName=\\\"ngModel\\\" [(ngModel)]=\\\"model.firstName\\\" required/>\\n                                    <div *ngIf=\\\"firstName.invalid && firstName.touched\\\" class=\\\"validation-error\\\">This field is required </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\"><label class=\\\"medium mb-1\\\" >Last Name *</label>\\n                                    <input class=\\\"form-control py-1\\\" name=\\\"lastName\\\" #lastName=\\\"ngModel\\\"\\n                                        [(ngModel)]=\\\"model.lastName\\\" required />\\n                                    <div *ngIf=\\\"lastName.invalid && lastName.touched\\\" class=\\\"validation-error\\\">This field is required </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\"><label class=\\\"medium mb-1\\\" >Mobile No </label>\\n                                    <input class=\\\"form-control py-1\\\" name=\\\"mobile\\\" #mobile=\\\"ngModel\\\" [(ngModel)]=\\\"model.mobile\\\" autocomplete=\\\"false\\\" type=\\\"tel\\\"/>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\"><label class=\\\"medium mb-1\\\" >Team Name</label>\\n                                    <input class=\\\"form-control py-1\\\" name=\\\"teamname\\\" #teamname=\\\"ngModel\\\" [(ngModel)]=\\\"model.teamName\\\" />\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\"><label class=\\\"medium mb-1\\\" >Desk No</label>\\n                                    <input class=\\\"form-control py-1\\\" name=\\\"deskno\\\" #desnko=\\\"ngModel\\\" [(ngModel)]=\\\"model.deskNo\\\"  />\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\"><label class=\\\"medium mb-1\\\" >Email *</label>\\n                                    <input class=\\\"form-control py-1\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"model.email\\\" type=\\\"email\\\"  required/>\\n                                    <div *ngIf=\\\"email.invalid && email.touched\\\" class=\\\"validation-error\\\">This field is required </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\"><label class=\\\"medium mb-1\\\" >Password *</label>\\n                                    <input class=\\\"form-control py-1\\\" type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"model.password\\\" required />\\n                                    <div *ngIf=\\\"password.invalid && password.touched\\\" class=\\\"validation-error\\\">This field is required </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\"><label class=\\\"medium mb-1\\\" >Confirm Password *</label>\\n                                    <input class=\\\"form-control py-1\\\" type=\\\"password\\\" name=\\\"confirmPassword\\\" #confirmPassword=\\\"ngModel\\\" [(ngModel)]=\\\"model.confirmPassword\\\" required/>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"form-group\\\">\\n                                 <small class=\\\"text-muted \\\">* Password should be at least 6 characters long</small>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-row \\\">\\n                            <div class=\\\"col-md-6\\\" >\\n                                   <div class=\\\"form-group\\\">\\n\\n                                        <label class=\\\"medium mb-1\\\" >SME Mark </label>\\n                                            <div class=\\\"checkbox\\\" >\\n                                               <div>\\n                                                    <input style=\\\"width: 30px;\\\" type=\\\"checkbox\\\" value=\\\"\\\" name=\\\"techsme\\\" #techsme=\\\"ngModel\\\" [(ngModel)]=\\\"model.techSME\\\"/><label>Technical</label>\\n                                                    <input style=\\\"width: 30px;\\\" type=\\\"checkbox\\\" value=\\\"\\\" name=\\\"domainsme\\\" #domainsme=\\\"ngModel\\\" [(ngModel)]=\\\"model.domainSME\\\"/><label>Domain</label>\\n                                                    <input style=\\\"width: 30px;\\\" type=\\\"checkbox\\\" value=\\\"\\\" name=\\\"otherssme\\\" #otherssme=\\\"ngModel\\\" [(ngModel)]=\\\"model.othersSME\\\"/><label>Others</label>\\n                                                </div>\\n                                            </div>\\n                                    </div>\\n                            </div>\\n                            <div class=\\\"col-md-6 \\\" >\\n                                <label class=\\\"medium mb-1\\\" >Skills *</label>\\n                                <div class=\\\"input-group mb-3\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"skill\\\" #newSkill=\\\"ngModel\\\"\\n                                        [(ngModel)]='skill'\\n                                        placeholder=\\\"Add your skills here (Ex: Java)\\\" >\\n                                    <div class=\\\"input-group-append\\\">\\n                                         <button class=\\\"btn btn-success\\\" (click)=\\\"onAdd()\\\">Add\\n                                             Skills</button>\\n                                    </div>\\n                                </div>\\n                                <div style=\\\"height: 80px;\\\" class=\\\"overflow-auto\\\" >\\n                                    <ul id=\\\"mySkills\\\" *ngIf=\\\"model.skills != null\\\"  >\\n                                            <li  *ngFor=\\\"let skill of model.skills\\\">\\n                                                {{ skill }}\\n                                            </li>\\n                                    </ul>\\n                                    <label *ngIf=\\\"model.skills == null || model.skills.length==0\\\">No skills Added</label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col-md-12 text-center\\\">\\n                                <div class=\\\"form-group \\\"><button class=\\\"btn-lg btn-primary\\\"\\n                                         (click)=\\\"onSubmit(ngForm)\\\" [disabled]=\\\"!ngForm.valid || !ngForm.touched\\\">Create Account</button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </form>\\n                </div>\\n                <div class=\\\"card-footer text-center\\\">\\n                    <div class=\\\"medium\\\"><a routerLink=\\\"/auth/login\\\">Have an account? Go to login</a></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div></sb-layout-auth>\\n\";","export default \" <sb-layout-auth\\n    ><div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-lg-7\\\">\\n                <div class=\\\"card shadow-lg border-0 rounded-lg mt-5\\\">\\n                    <div class=\\\"card-header\\\"><h3 class=\\\"text-center font-weight-dark my-4\\\">Password Reset</h3></div>\\n                    <div class=\\\"card-body\\\">\\n                            <div class=\\\"form-row\\\">\\n                                <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"medium mb-1\\\" >Password</label>\\n                                        <input class=\\\"form-control py-4\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\"  type=\\\"password\\\" required />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"medium mb-1\\\" >Confirm Password</label>\\n                                        <input class=\\\"form-control py-4\\\"  [(ngModel)]=\\\"user.confirmpassword\\\" type=\\\"password\\\"  required />\\n                                    </div>\\n                                </div>\\n                            </div>\\n                             <div class=\\\"form-row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                         <small class=\\\"text-muted\\\">* Password should be at least 6 characters long</small>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group mt-4 mb-0\\\">\\n                                <button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"handleResetPassword(user)\\\" routerLink=\\\"/auth/login\\\"  >Confirm</button>\\n                            </div>\\n                    </div>\\n                    <div class=\\\"card-footer text-center\\\">\\n                        <div class=\\\"medium\\\"><a routerLink=\\\"/auth/login\\\" >Have an account already? Go to login</a></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div></sb-layout-auth\\n>\\n\";","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SBRouteData } from '@modules/navigation/models';\n\n/* Module */\nimport { AuthModule } from './auth.module';\n\n/* Containers */\nimport * as authContainers from './containers';\n\n/* Guards */\nimport * as authGuards from './guards';\nimport { UserManagementComponent } from './containers/usermanagement/usermanagement.component';\n\n/* Routes */\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'login',\n    },\n    {\n        path: 'login',\n        canActivate: [],\n        component: authContainers.LoginComponent,\n        data: {\n            title: 'Login - SME Adviser',\n        } as SBRouteData,\n    },\n\n    {\n        path: 'skills',\n        canActivate: [],\n        component: authContainers.SkillsComponent,\n        data: {\n            title: 'Skills set',\n        } as SBRouteData,\n    },\n    {\n        path: 'forgot-password',\n        canActivate: [],\n        component: authContainers.ForgotPasswordComponent,\n        data: {\n            title: 'Forgot Password - SME Adviser',\n        } as SBRouteData,\n    },\n    {\n        path: 'reset-password',\n        canActivate: [],\n        component: authContainers.UserManagementComponent,\n        data: {\n            title: 'Reset Password - SME Adviser',\n        } as SBRouteData,\n    },\n];\n\n@NgModule({\n    imports: [AuthModule, RouterModule.forChild(ROUTES)],\n    exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n//  Firebase\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\n\n/* Modules */\nimport { AppCommonModule } from '@common/app-common.module';\nimport { NavigationModule } from '@modules/navigation/navigation.module';\n\n/* Components */\nimport * as authComponents from './components';\n\n/* Containers */\nimport * as authContainers from './containers';\n\n/* Guards */\nimport * as authGuards from './guards';\n\n/* Services */\nimport * as authServices from './services';\nimport { environment } from '../../environments/environment';\nimport { UserSkillService } from './services/userskill.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        FormsModule,\n        AppCommonModule,\n        NavigationModule,\n        AngularFireModule.initializeApp(environment.firebaseConfig),\n        AngularFirestoreModule, // firestore\n        AngularFireAuthModule, // auth\n        AngularFireStorageModule, // storage\n        FormsModule,\n    ],\n    providers: [...authServices.services, UserSkillService, ...authGuards.guards],\n    declarations: [...authContainers.containers, ...authComponents.components],\n    exports: [...authContainers.containers, ...authComponents.components],\n})\nexport class AuthModule {}\n","export const components = [];\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyJ9 */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { User } from '@testing/mocks';\n\n@Component({\n    selector: 'sb-forgot-password',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './forgot-password.component.html',\n    styleUrls: ['forgot-password.component.scss'],\n})\nexport class ForgotPasswordComponent implements OnInit {\n    user = {} as User;\n    constructor(private authservice: AuthService) { }\n\n    resetEmail!: string;\n    ngOnInit() {}\n\n    async resetPassword(user: User) {\n        this.authservice.resetPassword(this.user.email);\n    }\n}\n","import { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { LoginComponent } from './login/login.component';\nimport { SkillsComponent } from './skills/skills.component';\nimport { UserManagementComponent } from './usermanagement/usermanagement.component';\n\nexport const containers = [\n    LoginComponent,\n    UserManagementComponent,\n    ForgotPasswordComponent,\n    SkillsComponent,\n];\n\nexport * from './login/login.component';\nexport * from './usermanagement/usermanagement.component';\nexport * from './forgot-password/forgot-password.component';\nexport * from './skills/skills.component';\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'sb-login',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './login.component.html',\n    styleUrls: ['login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n    email!: string;\n    password!: string;\n\n    constructor(private authservice: AuthService, private router: Router) { }\n\n    ngOnInit() {\n        //  this.resetForm();\n    }\n\n    resetForm(form?: NgForm) {\n        // if (form != null) {\n        //     form.reset();\n        // }\n\n        // this.authservice.userData = {\n        //     id: '',\n        //     firstName: '',\n        //     lastName: '',\n        //     email: '',\n        //     password: '',\n        //     confirmPassword: '',\n        // };\n    }\n\n    SignIn() {\n        this.authservice.SignIn(this.email, this.password);\n        this.email = '';\n        this.password = '';\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvc2tpbGxzL3NraWxscy5jb21wb25lbnQuY3NzIn0= */\";","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserSkill } from '@modules/auth/models/userskill.model';\nimport { User } from '@testing/mocks';\n\nimport { AuthService } from '../../services/auth.service';\nimport { UserService } from '../../services/user.service';\nimport { UserSkillService } from '../../services/userskill.service';\n\n@Component({\n    selector: 'sb-skills',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './skills.component.html',\n    styleUrls: ['skills.component.css'],\n})\nexport class SkillsComponent implements OnInit {\n    skill = '';\n    model: UserSkill;\n    email!: string;\n    password!: string;\n\n    user?: User;\n\n    constructor(\n        private userskillservice: UserSkillService,\n        private authService: AuthService,\n        private userservice: UserService,\n        private firestore: AngularFirestore,\n        private router: Router\n    ) {\n        this.model = {\n            id: '',\n            firstName: '',\n            lastName: '',\n            mobile: '',\n            teamName: '',\n            deskNo: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            techSME: false,\n            domainSME: false,\n            othersSME: false,\n            skills: [],\n        };\n    }\n\n    ngOnInit() {\n        this.resetForm();\n    }\n\n    onAdd() {\n        if (\n            this.skill.trim() !== '' &&\n            this.model.skills.findIndex(value => {\n                return this.skill === value;\n            }) < 0\n        ) {\n            this.model.skills.push(this.skill);\n        }\n        this.skill = '';\n    }\n\n    resetForm(form?: NgForm) {\n        if (form != null) {\n            form.reset();\n        }\n    }\n\n    onSubmit(form: NgForm) {\n        const data = form.value;\n\n        this.authService.SignUp(this.model.email, this.model.password).then(\n            (userid: string) => {\n                this.model.id = userid;\n                this.userskillservice.createUserSkill(this.model).then(() => {\n                    this.resetForm(form);\n                    // this.router.navigate(['dashboard']);\n                    alert('User Registered successfully');\n                    this.router.navigate(['dashboard']);\n                });\n            },\n            (message: string) => {\n                alert(\n                    'User Registration failed. Please try again. If the issue persists, please contact Admin.'\n                );\n            }\n        );\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvdXNlcm1hbmFnZW1lbnQvdXNlcm1hbmFnZW1lbnQuY29tcG9uZW50LnNjc3MifQ== */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from '@modules/auth/services';\n\nimport { User } from '../../models/user.model';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n    selector: 'sb-usermanagement',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './usermanagement.component.html',\n    styleUrls: ['usermanagement.component.scss'],\n})\nexport class UserManagementComponent implements OnInit {\n    user!: User;\n\n    constructor(private authservice: AuthService, private userservice: UserService) {}\n\n    ngOnInit() {}\n\n    // async handleResetPassword(user: User) {\n    //     this.authservice.handleResetPassword(this.user.password, this.user.confirmPassword);\n    // }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    canActivate(): Observable<boolean> {\n        return of(true);\n    }\n}\n","import { AuthGuard } from './auth.guard';\n\nexport const guards = [AuthGuard];\n\nexport * from './auth.guard';\n"]}