{"version":3,"sources":["./src/modules/addnewquery/components/addnewquery/addnewquery.component.html","./src/modules/addnewquery/containers/newquery/newquery.component.html","./src/modules/addnewquery/addnewquery-routing.module.ts","./src/modules/addnewquery/addnewquery.module.ts","./src/modules/addnewquery/components/addnewquery/addnewquery.component.scss","./src/modules/addnewquery/components/addnewquery/addnewquery.component.ts","./src/modules/addnewquery/components/index.ts","./src/modules/addnewquery/containers/index.ts","./src/modules/addnewquery/containers/newquery/newquery.component.scss","./src/modules/addnewquery/containers/newquery/newquery.component.ts","./src/modules/addnewquery/directives/index.ts","./src/modules/addnewquery/directives/sortable.directive.ts","./src/modules/addnewquery/guards/addnewquery.guard.ts","./src/modules/addnewquery/guards/index.ts","./src/modules/addnewquery/services/index.ts","./src/modules/addnewquery/services/query.service.ts"],"names":[],"mappings":"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","file":"modules-addnewquery-addnewquery-routing-module-es2015.js","sourcesContent":["export default \"<div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-12\\\">\\n        <div class=\\\"card shadow-lg border-0 rounded-lg mt-2\\\">\\n            <div class=\\\"card-header\\\">\\n                <h3 class=\\\"text-center font-weight-dark my-1\\\">Add new Query</h3>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <form #form=\\\"ngForm\\\"  (submit)=\\\"onSubmit(form)\\\">\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group \\\"><label class=\\\"medium mb-1 \\\">First Name</label>\\n                                <input class=\\\"form-control py-4\\\" name=\\\"firstname\\\" #firstname=\\\"ngModel\\\"\\n                                    [(ngModel)]=\\\"queryservice.formData.firstname\\\" placeholder=\\\"Enter first name\\\"\\n                                    required /></div>\\n                            <div *ngIf=\\\"firstname.invalid && firstname.touched\\\" class=\\\"validation-error\\\">This field is\\n                                required</div>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group\\\"><label class=\\\"medium mb-1\\\">Last Name</label>\\n                                <input class=\\\"form-control py-4\\\" name=\\\"lastname\\\" #lastname=\\\"ngModel\\\"\\n                                    [(ngModel)]=\\\"queryservice.formData.lastname\\\" placeholder=\\\"Enter last name\\\"\\n                                    required /></div>\\n                            <div *ngIf=\\\"lastname.invalid && lastname.touched\\\" class=\\\"validation-error\\\">This field is\\n                                required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group\\\"><label class=\\\"medium mb-1\\\">Email</label>\\n                                <input class=\\\"form-control py-4\\\" name=\\\"email\\\" #email=\\\"ngModel\\\"\\n                                    [(ngModel)]=\\\"queryservice.formData.email\\\" type=\\\"email\\\" aria-describedby=\\\"emailHelp\\\"\\n                                    placeholder=\\\"Enter email address\\\" required /></div>\\n                            <div *ngIf=\\\"email.invalid && email.touched\\\" class=\\\"validation-error\\\">This field is required\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"form-group\\\"><label class=\\\"medium mb-1\\\">Phone No</label>\\n                                <input class=\\\"form-control py-4\\\" name=\\\"phone\\\" #phone=\\\"ngModel\\\"\\n                                    [(ngModel)]=\\\"queryservice.formData.phone\\\" placeholder=\\\"Enter Phone Number\\\"\\n                                    required /></div>\\n                            <div *ngIf=\\\"phone.invalid && phone.touched\\\" class=\\\"validation-error\\\">This field is required\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <!-- <div class=\\\"form-row\\\">\\n                        <div class=\\\"form-group col-md-12\\\" name=\\\"category\\\" #category=\\\"ngModel\\\"\\n                            [(ngModel)]=\\\"postservice.formData.category\\\" >\\n                            <div ngbDropdown class=\\\"d-inline-block\\\">\\n                                <a class=\\\"btn btn-outline-primary\\\" id=\\\"dropdownBasic2\\\" ngbDropdownToggle>Category</a>\\n                                <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic2\\\">\\n                                    <a ngbDropdownItem>Technical</a>\\n                                    <a ngbDropdownItem>Domain</a>\\n                                    <a ngbDropdownItem>Others</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\\"category.invalid && category.touched\\\" class=\\\"validation-error\\\">This field is\\n                            required</div>\\n                    </div> -->\\n\\n                    <div class=\\\"form-group\\\">\\n                        <angular-editor name=\\\"querydesc\\\" #querydesc=\\\"ngModel\\\" [(ngModel)]=\\\"queryservice.formData.querydesc\\\"\\n                            [config]=\\\"config\\\"></angular-editor>\\n                        <div *ngIf=\\\"querydesc.invalid && querydesc.touched\\\" class=\\\"validation-error\\\">This field is\\n                            required</div>\\n                    </div>\\n\\n                    <div class=\\\"form-row\\\">\\n                        <div class=\\\"col-md-6 form-group mt-4 mb-0 \\\">\\n                            <a class=\\\"btn btn-primary \\\" (click)=\\\"resetForm()\\\">Reset</a>\\n                        </div>\\n                        <div class=\\\"col-md-6 form-group mt-4 mb-0\\\">\\n                            <button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"\\n                                class=\\\"btn btn-success btn-block\\\"> Submit</button>\\n                        </div>\\n                    </div>\\n\\n                </form>\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n</div>\\n\";","export default \"<sb-layout-dashboard\\n    ><sb-dashboard-head ></sb-dashboard-head>\\n         <div class=\\\"card-body\\\"><sb-addnewquery ></sb-addnewquery></div>\\n</sb-layout-dashboard>\\n\";","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/* Module */\nimport { AddNewQueryModule } from './addnewquery.module';\n\n/* Containers */\nimport * as addnewqueryContainers from './containers';\n\n/* Guards */\n\nimport { SBRouteData } from '@modules/navigation/models';\n\n/* Routes */\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        canActivate: [],\n        component: addnewqueryContainers.NewQueryComponent,\n        data: {\n            title: 'Add new Query',\n            breadcrumbs: [\n                {\n                    icon: 'book-open',\n                    text: 'addnewquery',\n                    link: '/addnewquery',\n                },\n                {\n                    text: 'addnewquery',\n                    active: true,\n                },\n            ],\n        } as SBRouteData,\n    },\n];\n\n@NgModule({\n    imports: [AddNewQueryModule, RouterModule.forChild(ROUTES)],\n    exports: [RouterModule],\n})\nexport class AddNewQueryRoutingModule {}\n","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { CommonModule, DecimalPipe } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AngularEditorModule } from '@kolkov/angular-editor';\nimport { NavigationModule } from '@modules/navigation/navigation.module';\n\n//  Firebase\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\n\n/* Modules */\nimport { AppCommonModule } from '@common/app-common.module';\n\n/* Components */\nimport * as addnewqueryComponents from './components';\n\n/* Containers */\nimport * as addnewqueryContainers from './containers';\n\n/* Directives */\nimport * as addnewqueryDirectives from './directives';\n\n/* Guards */\nimport * as addnewqueryGuards from './guards';\n\n/* Services */\nimport * as addnewqueryServices from './services';\nimport { environment } from '../../environments/environment';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        FormsModule,\n        AppCommonModule,\n        AngularEditorModule,\n        NavigationModule,\n        AngularFireModule.initializeApp(environment.firebaseConfig),\n        AngularFirestoreModule, // firestore\n        AngularFireAuthModule, // auth\n        AngularFireStorageModule, // storage\n        FormsModule,\n    ],\n    providers: [\n        DecimalPipe,\n        ...addnewqueryServices.services,\n        ...addnewqueryGuards.guards,\n        ...addnewqueryDirectives.directives,\n    ],\n    declarations: [\n        ...addnewqueryContainers.containers,\n        ...addnewqueryComponents.components,\n        ...addnewqueryDirectives.directives,\n    ],\n    exports: [...addnewqueryContainers.containers, ...addnewqueryComponents.components],\n})\nexport class AddNewQueryModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hZGRuZXdxdWVyeS9jb21wb25lbnRzL2FkZG5ld3F1ZXJ5L2FkZG5ld3F1ZXJ5LmNvbXBvbmVudC5zY3NzIn0= */\";","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    OnInit,\n    QueryList,\n    ViewChildren,\n} from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { NgForm } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { Observable } from 'rxjs';\n\nimport { Query } from '../../models/query.model';\nimport { QueryService } from '../../services/query.service';\n\n@Component({\n    selector: 'sb-addnewquery',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './addnewquery.component.html',\n    styleUrls: ['addnewquery.component.scss'],\n})\nexport class AddNewQueryComponent implements OnInit {\n    htmlContent = '';\n    public config: AngularEditorConfig = {\n        editable: true,\n        spellcheck: true,\n        height: '5rem',\n        minHeight: '15rem',\n        placeholder: 'Enter text here...',\n        translate: 'no',\n        defaultParagraphSeparator: 'p',\n        defaultFontName: 'Arial',\n    };\n\n    constructor(private queryservice: QueryService, private firestore: AngularFirestore) { }\n\n    ngOnInit() {\n        this.resetForm();\n    }\n\n    resetForm(form?: NgForm) {\n        if (form != null) {\n            form.reset();\n        }\n\n        this.queryservice.formData = {\n            id: '',\n            firstname: '',\n            lastname: '',\n            email: '',\n            phone: '',\n            category: '',\n            querydesc: '',\n        };\n    }\n\n    onSubmit(form: NgForm) {\n        let data = form.value;\n        this.firestore.collection('query').add(data);\n        this.resetForm(form);\n        alert('Query Submitted successfully');\n    }\n\n    // create(query: Query) {\n    //     this.queryservice.createQuery(query);\n    // }\n\n    // update(query: Query) {\n    //     this.queryservice.updateQuery(query);\n    // }\n\n    // delete(id: string) {\n    //     this.queryservice.deleteQuery(id);\n    // }\n}\n","import { AddNewQueryComponent } from './addnewquery/addnewquery.component';\n\nexport const components = [AddNewQueryComponent];\n\nexport * from './addnewquery/addnewquery.component';\n","import { NewQueryComponent } from './newquery/newquery.component';\n\nexport const containers = [NewQueryComponent];\n\nexport * from './newquery/newquery.component';\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hZGRuZXdxdWVyeS9jb250YWluZXJzL25ld3F1ZXJ5L25ld3F1ZXJ5LmNvbXBvbmVudC5zY3NzIn0= */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'sb-newquery',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './newquery.component.html',\n    styleUrls: ['newquery.component.scss'],\n})\nexport class NewQueryComponent implements OnInit {\n    constructor() {}\n    ngOnInit() {}\n}\n","import { SBSortableHeaderDirective } from './sortable.directive';\n\nexport const directives = [SBSortableHeaderDirective];\n\nexport * from './sortable.directive';\n","import { Directive, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\n\nexport type SortDirection = 'asc' | 'desc' | '';\nconst rotate: { [key: string]: SortDirection } = { asc: 'desc', desc: '', '': 'asc' };\n\nexport interface SortEvent {\n    column: string;\n    direction: SortDirection;\n}\n\n@Directive({\n    selector: 'th[sbSortable]',\n})\nexport class SBSortableHeaderDirective {\n    @Input() sbSortable!: string;\n    @Input() direction: SortDirection = '';\n    @Output() sort = new EventEmitter<SortEvent>();\n\n    @HostBinding('class.asc') get isAscending() {\n        return this.direction === 'asc';\n    }\n    @HostBinding('class.desc') get isDescending() {\n        return this.direction === 'desc';\n    }\n    @HostListener('click') rotate() {\n        this.direction = rotate[this.direction];\n        this.sort.emit({ column: this.sbSortable, direction: this.direction });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class AddNewQueryGuard implements CanActivate {\n    canActivate(): Observable<boolean> {\n        return of(true);\n    }\n}\n","import { AddNewQueryGuard } from './addnewquery.guard';\n\nexport const guards = [AddNewQueryGuard];\n\nexport * from './addnewquery.guard';\n","import { QueryService } from './query.service';\nexport const services = [QueryService];\nexport * from './query.service';\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable, of } from 'rxjs';\n\nimport { Query } from '../models/query.model';\n\n@Injectable()\nexport class QueryService {\n    formData!: Query;\n\n    constructor(private firestore: AngularFirestore) {}\n\n    getQuery$() {\n        return this.firestore.collection('query').snapshotChanges();\n    }\n    createQuery(query: Query) {\n        return this.firestore.collection('query').add(query);\n    }\n\n    updateQuery(query: Query) {\n        delete query.id;\n        this.firestore.doc('query/' + query.id).update(query);\n    }\n\n    deleteQuery(queryId: string) {\n        this.firestore.doc('query/' + queryId).delete();\n    }\n}\n"],"sourceRoot":"webpack:///"}